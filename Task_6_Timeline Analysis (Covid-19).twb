<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0918.1727                               -->
<workbook source-build='2020.3.1 (20203.20.0918.1727)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='countries +' inline='true' name='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='countries' name='textscan.0j4cp4g15vhjw212rwpqn0pqccpp'>
            <connection class='textscan' directory='E:/Interenship' filename='countries .csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0j4cp4g15vhjw212rwpqn0pqccpp' name='countries .csv' table='[countries #csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='real' name='Latitude' ordinal='0' />
            <column datatype='real' name='Longitude' ordinal='1' />
            <column datatype='string' name='Location' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0j4cp4g15vhjw212rwpqn0pqccpp' name='countries .csv' table='[countries #csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='real' name='Latitude' ordinal='0' />
              <column datatype='real' name='Longitude' ordinal='1' />
              <column datatype='string' name='Location' ordinal='2' />
            </columns>
          </relation>
          <relation connection='textscan.0j4cp4g15vhjw212rwpqn0pqccpp' name='covid.csv' table='[covid#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='iso_code' ordinal='0' />
              <column datatype='string' name='continent' ordinal='1' />
              <column datatype='string' name='location' ordinal='2' />
              <column datatype='date' name='date' ordinal='3' />
              <column datatype='real' name='total_cases' ordinal='4' />
              <column datatype='real' name='new_cases' ordinal='5' />
              <column datatype='real' name='new_cases_smoothed' ordinal='6' />
              <column datatype='real' name='total_deaths' ordinal='7' />
              <column datatype='real' name='new_deaths' ordinal='8' />
              <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
              <column datatype='real' name='total_cases_per_million' ordinal='10' />
              <column datatype='real' name='new_cases_per_million' ordinal='11' />
              <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
              <column datatype='real' name='total_deaths_per_million' ordinal='13' />
              <column datatype='real' name='new_deaths_per_million' ordinal='14' />
              <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
              <column datatype='string' name='new_tests' ordinal='16' />
              <column datatype='string' name='total_tests' ordinal='17' />
              <column datatype='string' name='total_tests_per_thousand' ordinal='18' />
              <column datatype='string' name='new_tests_per_thousand' ordinal='19' />
              <column datatype='string' name='new_tests_smoothed' ordinal='20' />
              <column datatype='string' name='new_tests_smoothed_per_thousand' ordinal='21' />
              <column datatype='string' name='tests_per_case' ordinal='22' />
              <column datatype='string' name='positive_rate' ordinal='23' />
              <column datatype='string' name='tests_units' ordinal='24' />
              <column datatype='real' name='stringency_index' ordinal='25' />
              <column datatype='real' name='population' ordinal='26' />
              <column datatype='real' name='population_density' ordinal='27' />
              <column datatype='real' name='median_age' ordinal='28' />
              <column datatype='real' name='aged_65_older' ordinal='29' />
              <column datatype='real' name='aged_70_older' ordinal='30' />
              <column datatype='real' name='gdp_per_capita' ordinal='31' />
              <column datatype='real' name='extreme_poverty' ordinal='32' />
              <column datatype='real' name='cardiovasc_death_rate' ordinal='33' />
              <column datatype='real' name='diabetes_prevalence' ordinal='34' />
              <column datatype='real' name='female_smokers' ordinal='35' />
              <column datatype='real' name='male_smokers' ordinal='36' />
              <column datatype='real' name='handwashing_facilities' ordinal='37' />
              <column datatype='real' name='hospital_beds_per_thousand' ordinal='38' />
              <column datatype='real' name='life_expectancy' ordinal='39' />
              <column datatype='real' name='human_development_index' ordinal='40' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[countries .csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[countries .csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries .csv_BAD767652DFE42C69DA5FF62B7A00FB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[countries .csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries .csv_BAD767652DFE42C69DA5FF62B7A00FB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[countries .csv]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries .csv_BAD767652DFE42C69DA5FF62B7A00FB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6E6CF134B3EE407681E7912706DF4397]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Show/Hide' datatype='real' name='[Calculation_593630762155859968]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ISNULL([total_deaths]) THEN 0 ELSE [total_deaths] END' />
      </column>
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='countries .csv' datatype='table' name='[__tableau_internal_object_id__].[countries .csv_BAD767652DFE42C69DA5FF62B7A00FB7]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='covid.csv' datatype='table' name='[__tableau_internal_object_id__].[covid.csv_6E6CF134B3EE407681E7912706DF4397]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location1' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='string' name='[new_tests]' role='dimension' type='nominal' />
      <column caption='New Tests Per Thousand' datatype='string' name='[new_tests_per_thousand]' role='dimension' type='nominal' />
      <column caption='New Tests Smoothed' datatype='string' name='[new_tests_smoothed]' role='dimension' type='nominal' />
      <column caption='New Tests Smoothed Per Thousand' datatype='string' name='[new_tests_smoothed_per_thousand]' role='dimension' type='nominal' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='string' name='[positive_rate]' role='dimension' type='nominal' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='string' name='[tests_per_case]' role='dimension' type='nominal' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='string' name='[total_tests]' role='dimension' type='nominal' />
      <column caption='Total Tests Per Thousand' datatype='string' name='[total_tests_per_thousand]' role='dimension' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <column-instance column='[aged_65_older]' derivation='Sum' name='[sum:aged_65_older:qk]' pivot='key' type='quantitative' />
      <column-instance column='[aged_70_older]' derivation='Sum' name='[sum:aged_70_older:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gdp_per_capita]' derivation='Sum' name='[sum:gdp_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases_per_million]' derivation='Sum' name='[sum:new_cases_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths_per_million]' derivation='Sum' name='[sum:new_deaths_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases_per_million]' derivation='Sum' name='[sum:total_cases_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:ok]' pivot='key' type='ordinal' />
      <column-instance column='[total_deaths_per_million]' derivation='Sum' name='[sum:total_deaths_per_million:ok]' pivot='key' type='ordinal' />
      <column-instance column='[total_deaths_per_million]' derivation='Sum' name='[sum:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cocos [Keeling] Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;U.S. Minor Outlying Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gaza Strip&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;R?union&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;S?o Tom? and Pr?ncipe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Congo [Republic]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bouvet Island&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Macedonia [FYROM]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Svalbard and Jan Mayen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;U.S. Virgin Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Heard Island and McDonald Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;C?te d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Southern Territories&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Falkland Islands [Islas Malvinas]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Myanmar [Burma]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Christmas Island&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norfolk Island&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Netherlands Antilles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pitcairn Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Indian Ocean Territory&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Congo [DRC]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Georgia and the South Sandwich Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[sum:total_deaths:ok]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>36076014.0</bucket>
            </map>
            <map to='#42709e'>
              <bucket>35865505.0</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>23143273.0</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>17377543.0</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>3197743.0</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>72074.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='red_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[pcto:sum:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#59504e'>
              <bucket>&quot;[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:new_cases:qk]:1&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:aged_70_older:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:new_deaths:qk]&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:new_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#dcd4d0'>
              <bucket>&quot;[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:gdp_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:new_cases:qk]&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:new_deaths_per_million:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths_per_million:qk]&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:aged_65_older:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[sum:total_deaths_per_million:ok]' palette='winter_10_0' type='palette'>
            <map to='#6b6b6b'>
              <bucket>62446.684999999976</bucket>
            </map>
            <map to='#6b6b6b'>
              <bucket>117139.87099999997</bucket>
            </map>
            <map to='#90728f'>
              <bucket>48837.19400000001</bucket>
            </map>
            <map to='#90728f'>
              <bucket>79328.364999999976</bucket>
            </map>
            <map to='#90728f'>
              <bucket>252047.86100000099</bucket>
            </map>
            <map to='#9d9b3d'>
              <bucket>50957.782999999981</bucket>
            </map>
            <map to='#9d9b3d'>
              <bucket>90570.57699999999</bucket>
            </map>
            <map to='#aa8780'>
              <bucket>66448.585000000006</bucket>
            </map>
            <map to='#aa8780'>
              <bucket>153384.19999999998</bucket>
            </map>
            <map to='#b9a0b4'>
              <bucket>50404.598000000136</bucket>
            </map>
            <map to='#b9a0b4'>
              <bucket>85792.330999999976</bucket>
            </map>
            <map to='#bab2ae'>
              <bucket>66277.648000000045</bucket>
            </map>
            <map to='#bab2ae'>
              <bucket>126719.71000000011</bucket>
            </map>
            <map to='#cecb76'>
              <bucket>54366.652000000147</bucket>
            </map>
            <map to='#cecb76'>
              <bucket>93181.284000000014</bucket>
            </map>
            <map to='#dab6af'>
              <bucket>66742.104999999996</bucket>
            </map>
            <map to='#dab6af'>
              <bucket>160640.06800000012</bucket>
            </map>
            <map to='#e15759'>
              <bucket>55918.162000000026</bucket>
            </map>
            <map to='#e15759'>
              <bucket>106147.45799999996</bucket>
            </map>
            <map to='#ff9888'>
              <bucket>60724.273999999983</bucket>
            </map>
            <map to='#ff9888'>
              <bucket>109617.62900000007</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='countries .csv' id='countries .csv_BAD767652DFE42C69DA5FF62B7A00FB7'>
            <properties context=''>
              <relation connection='textscan.0j4cp4g15vhjw212rwpqn0pqccpp' name='countries .csv' table='[countries #csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='real' name='Latitude' ordinal='0' />
                  <column datatype='real' name='Longitude' ordinal='1' />
                  <column datatype='string' name='Location' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='covid.csv' id='covid.csv_6E6CF134B3EE407681E7912706DF4397'>
            <properties context=''>
              <relation connection='textscan.0j4cp4g15vhjw212rwpqn0pqccpp' name='covid.csv' table='[covid#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='real' name='total_cases' ordinal='4' />
                  <column datatype='real' name='new_cases' ordinal='5' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='6' />
                  <column datatype='real' name='total_deaths' ordinal='7' />
                  <column datatype='real' name='new_deaths' ordinal='8' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
                  <column datatype='real' name='total_cases_per_million' ordinal='10' />
                  <column datatype='real' name='new_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='13' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
                  <column datatype='string' name='new_tests' ordinal='16' />
                  <column datatype='string' name='total_tests' ordinal='17' />
                  <column datatype='string' name='total_tests_per_thousand' ordinal='18' />
                  <column datatype='string' name='new_tests_per_thousand' ordinal='19' />
                  <column datatype='string' name='new_tests_smoothed' ordinal='20' />
                  <column datatype='string' name='new_tests_smoothed_per_thousand' ordinal='21' />
                  <column datatype='string' name='tests_per_case' ordinal='22' />
                  <column datatype='string' name='positive_rate' ordinal='23' />
                  <column datatype='string' name='tests_units' ordinal='24' />
                  <column datatype='real' name='stringency_index' ordinal='25' />
                  <column datatype='real' name='population' ordinal='26' />
                  <column datatype='real' name='population_density' ordinal='27' />
                  <column datatype='real' name='median_age' ordinal='28' />
                  <column datatype='real' name='aged_65_older' ordinal='29' />
                  <column datatype='real' name='aged_70_older' ordinal='30' />
                  <column datatype='real' name='gdp_per_capita' ordinal='31' />
                  <column datatype='real' name='extreme_poverty' ordinal='32' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='33' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='34' />
                  <column datatype='real' name='female_smokers' ordinal='35' />
                  <column datatype='real' name='male_smokers' ordinal='36' />
                  <column datatype='real' name='handwashing_facilities' ordinal='37' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='38' />
                  <column datatype='real' name='life_expectancy' ordinal='39' />
                  <column datatype='real' name='human_development_index' ordinal='40' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Location]' />
              <expression op='[location]' />
            </expression>
            <first-end-point object-id='countries .csv_BAD767652DFE42C69DA5FF62B7A00FB7' />
            <second-end-point object-id='covid.csv_6E6CF134B3EE407681E7912706DF4397' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='owid-covid-data' inline='true' name='federated.0203dwk15zwaqr14jsb1d1ur3268' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid-covid-data' name='textscan.0vhh94j0k7032h1f5nc2q1hrkyw1'>
            <connection class='textscan' directory='E:/Interenship' filename='covid.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0vhh94j0k7032h1f5nc2q1hrkyw1' name='countries .csv' table='[countries #csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='real' name='Latitude' ordinal='0' />
            <column datatype='real' name='Longitude' ordinal='1' />
            <column datatype='string' name='Location' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0vhh94j0k7032h1f5nc2q1hrkyw1' name='countries .csv' table='[countries #csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='real' name='Latitude' ordinal='0' />
              <column datatype='real' name='Longitude' ordinal='1' />
              <column datatype='string' name='Location' ordinal='2' />
            </columns>
          </relation>
          <relation connection='textscan.0vhh94j0k7032h1f5nc2q1hrkyw1' name='covid.csv' table='[covid#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='iso_code' ordinal='0' />
              <column datatype='string' name='continent' ordinal='1' />
              <column datatype='string' name='location' ordinal='2' />
              <column datatype='date' name='date' ordinal='3' />
              <column datatype='real' name='total_cases' ordinal='4' />
              <column datatype='real' name='new_cases' ordinal='5' />
              <column datatype='real' name='new_cases_smoothed' ordinal='6' />
              <column datatype='real' name='total_deaths' ordinal='7' />
              <column datatype='real' name='new_deaths' ordinal='8' />
              <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
              <column datatype='real' name='total_cases_per_million' ordinal='10' />
              <column datatype='real' name='new_cases_per_million' ordinal='11' />
              <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
              <column datatype='real' name='total_deaths_per_million' ordinal='13' />
              <column datatype='real' name='new_deaths_per_million' ordinal='14' />
              <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
              <column datatype='string' name='new_tests' ordinal='16' />
              <column datatype='string' name='total_tests' ordinal='17' />
              <column datatype='string' name='total_tests_per_thousand' ordinal='18' />
              <column datatype='string' name='new_tests_per_thousand' ordinal='19' />
              <column datatype='string' name='new_tests_smoothed' ordinal='20' />
              <column datatype='string' name='new_tests_smoothed_per_thousand' ordinal='21' />
              <column datatype='string' name='tests_per_case' ordinal='22' />
              <column datatype='string' name='positive_rate' ordinal='23' />
              <column datatype='string' name='tests_units' ordinal='24' />
              <column datatype='real' name='stringency_index' ordinal='25' />
              <column datatype='real' name='population' ordinal='26' />
              <column datatype='real' name='population_density' ordinal='27' />
              <column datatype='real' name='median_age' ordinal='28' />
              <column datatype='real' name='aged_65_older' ordinal='29' />
              <column datatype='real' name='aged_70_older' ordinal='30' />
              <column datatype='real' name='gdp_per_capita' ordinal='31' />
              <column datatype='real' name='extreme_poverty' ordinal='32' />
              <column datatype='real' name='cardiovasc_death_rate' ordinal='33' />
              <column datatype='real' name='diabetes_prevalence' ordinal='34' />
              <column datatype='real' name='female_smokers' ordinal='35' />
              <column datatype='real' name='male_smokers' ordinal='36' />
              <column datatype='real' name='handwashing_facilities' ordinal='37' />
              <column datatype='real' name='hospital_beds_per_thousand' ordinal='38' />
              <column datatype='real' name='life_expectancy' ordinal='39' />
              <column datatype='real' name='human_development_index' ordinal='40' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[countries .csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[countries .csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries .csv_893F91ACAF9144EE9BAF160CCBC8CBDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[countries .csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries .csv_893F91ACAF9144EE9BAF160CCBC8CBDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[countries .csv]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries .csv_893F91ACAF9144EE9BAF160CCBC8CBDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[covid.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid.csv_6FD346BEADFB409A800E552E464840B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='countries .csv' datatype='table' name='[__tableau_internal_object_id__].[countries .csv_893F91ACAF9144EE9BAF160CCBC8CBDA]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='covid.csv' datatype='table' name='[__tableau_internal_object_id__].[covid.csv_6FD346BEADFB409A800E552E464840B6]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location 1' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='string' name='[new_tests]' role='dimension' type='nominal' />
      <column caption='New Tests Per Thousand' datatype='string' name='[new_tests_per_thousand]' role='dimension' type='nominal' />
      <column caption='New Tests Smoothed' datatype='string' name='[new_tests_smoothed]' role='dimension' type='nominal' />
      <column caption='New Tests Smoothed Per Thousand' datatype='string' name='[new_tests_smoothed_per_thousand]' role='dimension' type='nominal' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='string' name='[positive_rate]' role='dimension' type='nominal' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='string' name='[tests_per_case]' role='dimension' type='nominal' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='string' name='[total_tests]' role='dimension' type='nominal' />
      <column caption='Total Tests Per Thousand' datatype='string' name='[total_tests_per_thousand]' role='dimension' type='nominal' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[iso_code]' derivation='None' name='[none:iso_code:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[total_cases_per_million]' derivation='Sum' name='[sum:total_cases_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths_per_million]' derivation='Sum' name='[sum:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Continent,Iso Code,Location)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:continent:nk]' />
          <groupfilter function='level-members' level='[none:iso_code:nk]' />
          <groupfilter function='level-members' level='[none:location:nk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0203dwk15zwaqr14jsb1d1ur3268].[sum:aged_65_older:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0203dwk15zwaqr14jsb1d1ur3268].[sum:population_density:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0203dwk15zwaqr14jsb1d1ur3268].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0203dwk15zwaqr14jsb1d1ur3268].[sum:total_deaths_per_million:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0203dwk15zwaqr14jsb1d1ur3268]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0203dwk15zwaqr14jsb1d1ur3268].[sum:total_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0203dwk15zwaqr14jsb1d1ur3268].[sum:new_deaths:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='countries .csv' id='countries .csv_893F91ACAF9144EE9BAF160CCBC8CBDA'>
            <properties context=''>
              <relation connection='textscan.0vhh94j0k7032h1f5nc2q1hrkyw1' name='countries .csv' table='[countries #csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='real' name='Latitude' ordinal='0' />
                  <column datatype='real' name='Longitude' ordinal='1' />
                  <column datatype='string' name='Location' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='covid.csv' id='covid.csv_6FD346BEADFB409A800E552E464840B6'>
            <properties context=''>
              <relation connection='textscan.0vhh94j0k7032h1f5nc2q1hrkyw1' name='covid.csv' table='[covid#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='real' name='total_cases' ordinal='4' />
                  <column datatype='real' name='new_cases' ordinal='5' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='6' />
                  <column datatype='real' name='total_deaths' ordinal='7' />
                  <column datatype='real' name='new_deaths' ordinal='8' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
                  <column datatype='real' name='total_cases_per_million' ordinal='10' />
                  <column datatype='real' name='new_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='13' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
                  <column datatype='string' name='new_tests' ordinal='16' />
                  <column datatype='string' name='total_tests' ordinal='17' />
                  <column datatype='string' name='total_tests_per_thousand' ordinal='18' />
                  <column datatype='string' name='new_tests_per_thousand' ordinal='19' />
                  <column datatype='string' name='new_tests_smoothed' ordinal='20' />
                  <column datatype='string' name='new_tests_smoothed_per_thousand' ordinal='21' />
                  <column datatype='string' name='tests_per_case' ordinal='22' />
                  <column datatype='string' name='positive_rate' ordinal='23' />
                  <column datatype='string' name='tests_units' ordinal='24' />
                  <column datatype='real' name='stringency_index' ordinal='25' />
                  <column datatype='real' name='population' ordinal='26' />
                  <column datatype='real' name='population_density' ordinal='27' />
                  <column datatype='real' name='median_age' ordinal='28' />
                  <column datatype='real' name='aged_65_older' ordinal='29' />
                  <column datatype='real' name='aged_70_older' ordinal='30' />
                  <column datatype='real' name='gdp_per_capita' ordinal='31' />
                  <column datatype='real' name='extreme_poverty' ordinal='32' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='33' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='34' />
                  <column datatype='real' name='female_smokers' ordinal='35' />
                  <column datatype='real' name='male_smokers' ordinal='36' />
                  <column datatype='real' name='handwashing_facilities' ordinal='37' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='38' />
                  <column datatype='real' name='life_expectancy' ordinal='39' />
                  <column datatype='real' name='human_development_index' ordinal='40' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Location]' />
              <expression op='[location]' />
            </expression>
            <first-end-point object-id='countries .csv_893F91ACAF9144EE9BAF160CCBC8CBDA' />
            <second-end-point object-id='covid.csv_6FD346BEADFB409A800E552E464840B6' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='CONTINENT WIDE CASES'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='14'>&lt;Sheet Name&gt; - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='countries +' name='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo' />
          </datasources>
          <datasource-dependencies datasource='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:ok]' pivot='key' type='ordinal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:continent:nk]'>
            <groupfilter from='&quot;Africa&quot;' function='range' level='[none:continent:nk]' to='&quot;South America&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_cases:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_cases:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-weight' value='normal' />
            <format attr='width' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:continent:nk]' value='123' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='background-color' scope='cols' value='#f3ebf3' />
            <format attr='background-color' scope='rows' value='#f3ebf3' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='CONTINENT WIDE CASES&#10;'>
              <formatted-text>
                <run>CONTINENT WIDE CASES&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Continent:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:continent:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Population:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:population:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Cases:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_cases:ok]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#d4a6c8' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#b07aa1' />
                <format attr='mark-transparency' value='255' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Continent:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:continent:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Population:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Cases:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_cases:ok]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#d4a6c8' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#b07aa1' />
                <format attr='mark-transparency' value='255' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.0434806346893311' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_cases:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Continent:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:continent:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Population:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Cases:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_cases:ok]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#000000' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#b07aa1' />
                <format attr='mark-transparency' value='255' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_cases:qk] + [federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_cases:qk])</rows>
        <cols>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:continent:nk]</cols>
        <pages>
          <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_cases:ok]</column>
        </pages>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
      <simple-id uuid='{4B1BC12D-C2E0-4C0E-9595-71D2F9152C9F}' />
    </worksheet>
    <worksheet name='COVID-19 WORLD WIDE DEATHS PER MILLION'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt; - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='countries +' name='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo'>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths_per_million]' derivation='Sum' name='[sum:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:continent:nk]'>
            <groupfilter from='&quot;Africa&quot;' function='range' level='[none:continent:nk]' to='&quot;South America&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[avg:Longitude:qk]' field-type='quantitative' max='8044659.7731388621' min='-2212781.0012086704' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[avg:Latitude:qk]' field-type='quantitative' max='6653631.4906689627' min='1203183.0374919046' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
            <format attr='wrap' value='true' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='area-red-light' />
            <format attr='geo-area-type' value='County' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths_per_million:qk]' />
              <lod column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:Location:nk]' />
              <lod column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:population:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='4.2105045318603516' />
                <format attr='mark-color' value='#ff9d9a' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ff0000' />
                <format attr='mark-transparency' value='80' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[avg:Latitude:qk]</rows>
        <cols>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[avg:Longitude:qk]</cols>
        <pages>
          <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{7A471B34-EED8-4778-B1FF-5599BB474C92}' />
    </worksheet>
    <worksheet name='COVID-19 WROLD WIDE CASES  PER MILLION'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt; - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='countries +' name='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo'>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases_per_million]' derivation='Sum' name='[sum:total_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[avg:Longitude:qk]' field-type='quantitative' max='19723965.19343926' min='-73607835.019495696' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[avg:Latitude:qk]' field-type='quantitative' max='13167041.783888504' min='-45756213.891677819' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#ebebeb' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.10000000149011612' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='Covid-19 WW'>
              <formatted-text>
                <run>Covid-19 WW</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_cases_per_million:qk]' />
              <lod column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:Location:nk]' />
              <lod column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:population:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='4.798032283782959' />
                <format attr='mark-color' value='#eafeff' />
                <format attr='mark-transparency' value='80' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#4e79a7' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1698' />
                <format attr='maxwidth' value='1698' />
                <format attr='minheight' value='1072' />
                <format attr='maxheight' value='1072' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[avg:Latitude:qk]</rows>
        <cols>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[avg:Longitude:qk]</cols>
        <pages>
          <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' mark-type='all' size='5' />
      </table>
      <simple-id uuid='{BDD505FE-93A6-4EB0-8122-8BDACE2BDE6F}' />
    </worksheet>
    <worksheet name='Continent Wise Death'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='14'>&lt;Sheet Name&gt; </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='countries +' name='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo' />
          </datasources>
          <datasource-dependencies datasource='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:ok]' pivot='key' type='ordinal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:continent:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:continent:nk]' />
              <groupfilter function='member' level='[none:continent:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='1' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths:qk]' scope='rows' value='false' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-width' scope='rows' value='0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='background-color' scope='cols' value='#f3ebf3' />
            <format attr='background-color' scope='rows' value='#f3ebf3' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths:ok]' />
              <lod column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:population:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:continent:nk]</rows>
        <cols>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths:qk]</cols>
      </table>
      <simple-id uuid='{A7B9C8D4-5DBF-4E56-A623-D879EAB732DE}' />
    </worksheet>
    <worksheet name='Country wise aged 65 older/ aged 70 older '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='14'>AGED 65 OLDER/ AGED 70 OLDER - COUNTRY</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='countries +' name='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo' />
          </datasources>
          <datasource-dependencies datasource='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
            <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[aged_65_older]' derivation='Sum' name='[sum:aged_65_older:qk]' pivot='key' type='quantitative' />
            <column-instance column='[aged_70_older]' derivation='Sum' name='[sum:aged_70_older:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:Location:nk]'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Location:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:aged_65_older:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:aged_70_older:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:Location:nk]</column>
            <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:aged_65_older:qk]</column>
            <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:aged_70_older:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:aged_65_older:qk]' scope='rows' value='Aged 65 Older/ Aged 70 Older' />
            <encoding attr='space' class='0' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:aged_70_older:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:aged_70_older:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#f3ebf3' />
            <format attr='background-color' scope='rows' value='#f3ebf3' />
            <format attr='border-width' value='0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[:Measure Names]' value='AGE'>
              <formatted-text>
                <run>AGE</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:aged_65_older:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='78' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#990197' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:aged_70_older:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='155' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#2c12bf' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:aged_65_older:qk] + [federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:aged_70_older:qk])</rows>
        <cols>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:Location:nk]</cols>
      </table>
      <simple-id uuid='{71E2A549-F810-4B79-9672-E81AAF24FC70}' />
    </worksheet>
    <worksheet name='Date wise new cases and deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='14'>NEW CASES/NEW DEATHS - DATE</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='countries +' name='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo' />
          </datasources>
          <datasource-dependencies datasource='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:new_deaths:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:new_deaths:qk]' scope='rows' value='false' />
            <format attr='tick-color' value='#00000000' />
            <format attr='height' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:date:qk]' value='61' />
            <format attr='title' class='0' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:new_cases:qk]' scope='rows' value=' New Cases/ New Deaths' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='background-color' scope='cols' value='#f3ebf3' />
            <format attr='background-color' scope='rows' value='#f3ebf3' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.40580111742019653' />
                <format attr='mark-color' value='#fabfd2' />
                <format attr='mark-transparency' value='42' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:new_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.40580111742019653' />
                <format attr='mark-color' value='#fabfd2' />
                <format attr='mark-transparency' value='42' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#990197' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:new_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.40580111742019653' />
                <format attr='mark-color' value='#fabfd2' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#2c12bf' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:new_cases:qk] + [federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:new_deaths:qk])</rows>
        <cols>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:date:qk]</cols>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
      <simple-id uuid='{EA36FDCF-E5B4-4363-BE01-3B27DF94C1C9}' />
    </worksheet>
    <worksheet name='Date wise new cases and deaths per million'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='14'>NEW CASES PER MILLION/ NEW DEATHS PER MILLION - DATE</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='countries +' name='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo' />
          </datasources>
          <datasource-dependencies datasource='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
            <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_cases_per_million]' derivation='Sum' name='[sum:new_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_deaths_per_million]' derivation='Sum' name='[sum:new_deaths_per_million:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:new_deaths_per_million:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:new_deaths_per_million:qk]' scope='rows' value='false' />
            <format attr='width' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:new_cases_per_million:qk]' value='68' />
            <format attr='width' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:new_deaths_per_million:qk]' value='68' />
            <format attr='title' class='0' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:new_cases_per_million:qk]' scope='rows' value='New Cases Per Million/ New Deaths Per Million' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='rows' value='#f3ebf3' />
            <format attr='background-color' scope='cols' value='#f3ebf3' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:new_cases_per_million:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#990197' />
                <format attr='mark-transparency' value='29' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:new_deaths_per_million:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='144' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#2c12bf' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:new_cases_per_million:qk] + [federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:new_deaths_per_million:qk])</rows>
        <cols>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{B6311648-2B63-4E38-A748-0BCE0C2013DA}' />
    </worksheet>
    <worksheet name='Spread rate per million'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='18'>COVID-19 Spread rate per million</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='countries +' name='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo' />
          </datasources>
          <datasource-dependencies datasource='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='MY' name='[my:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' />
          </filter>
          <slices>
            <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='1' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_cases:qk]' scope='rows' value='false' />
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='tick-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' scope='rows' value='#ffffff' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' scope='rows' value='none' />
            <format attr='color' value='#9d7660' />
            <format attr='color' data-class='subtotal' value='#ff0000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' scope='rows' value='#000000' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' scope='rows' value='none' />
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='color' data-class='subtotal' value='#1b1b1b' />
            <format attr='band-color' scope='rows' value='#000000' />
            <format attr='background-color' scope='cols' value='#dfedeb' />
            <format attr='background-color' scope='rows' value='#f3faf9' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' value='#1d00ff' />
            <format attr='color' scope='cols' value='#ff0000' />
            <format attr='color' scope='rows' value='#000cff' />
            <format attr='color' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_cases:qk]' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' scope='rows' value='#000000' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' scope='rows' value='none' />
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='background-color' data-class='subtotal' scope='rows' value='#ffffff' />
            <format attr='background-color' data-class='total' scope='rows' value='#ffffff' />
            <format attr='band-color' scope='cols' value='#ffffff' />
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#edc948' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' scope='rows' value='#00000000' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='1' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#998f8c' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[my:date:ok]</rows>
        <cols />
      </table>
      <simple-id uuid='{AF970D3C-8BDF-4AB7-AA7F-C6365876DDBF}' />
    </worksheet>
    <worksheet name='TOTAL DEATHS'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt; - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='countries +' name='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo' />
          </datasources>
          <datasource-dependencies datasource='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:ok]' pivot='key' type='ordinal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:Location:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Location:nk]' />
              <groupfilter function='member' level='[none:Location:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:Location:nk]</column>
            <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='tick-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#f5ead7' />
            <format attr='background-color' scope='rows' value='#f5ead7' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='Sum of TD'>
              <formatted-text>
                <run>Sum of TD</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff9d9a' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ff0000' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:Location:nk]</rows>
        <cols>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths:qk]</cols>
        <pages>
          <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths:ok]</column>
        </pages>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
      <simple-id uuid='{52B294F2-40C1-4A1C-9A6B-734C8B6AB352}' />
    </worksheet>
    <worksheet name='TOTAL DEATHS PER MILLION'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt; - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='countries +' name='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo' />
          </datasources>
          <datasource-dependencies datasource='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths_per_million]' derivation='Sum' name='[sum:total_deaths_per_million:ok]' pivot='key' type='ordinal' />
            <column-instance column='[total_deaths_per_million]' derivation='Sum' name='[sum:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:Location:nk]'>
            <groupfilter function='level-members' level='[none:Location:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths_per_million:ok]'>
            <groupfilter function='level-members' level='[sum:total_deaths_per_million:ok]' />
          </filter>
          <filter class='quantitative' column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths_per_million:qk]' included-values='in-range'>
            <min>40564.0</min>
          </filter>
          <slices>
            <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:Location:nk]</column>
            <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths_per_million:qk]</column>
            <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths_per_million:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-width' value='0' />
            <format attr='font-weight' data-class='subtotal' scope='cols' value='normal' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#f5ead7' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#f5eddc' />
            <format attr='background-color' scope='rows' value='#f5ead7' />
            <format attr='background-color' data-class='subtotal' scope='rows' value='#f5ead7' />
            <format attr='background-color' data-class='total' scope='rows' value='#f5ead7' />
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths_per_million:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths_per_million:qk]</rows>
        <cols>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:Location:nk]</cols>
      </table>
      <simple-id uuid='{DB742C6C-2914-4B3D-9735-2F94C401D951}' />
    </worksheet>
    <worksheet name='TOTAL DEATHS PER MILLION BY DAYS'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt; - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='countries +' name='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo' />
          </datasources>
          <datasource-dependencies datasource='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths_per_million]' derivation='Sum' name='[sum:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:date:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths_per_million:qk]' included-values='in-range-or-null'>
            <min>2.2250738585072014e-308</min>
          </filter>
          <slices>
            <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:date:qk]</column>
            <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths_per_million:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths_per_million:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths_per_million:qk]' scope='rows' value='false' />
            <format attr='tick-color' value='#00000000' />
            <format attr='tick-color' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths_per_million:qk]' value='#ffffff' />
            <encoding attr='space' class='0' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths_per_million:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
            <format attr='color' data-class='subtotal' scope='rows' value='#000000' />
            <format attr='font-weight' data-class='total' scope='rows' value='bold' />
            <format attr='font-weight' data-class='total' scope='cols' value='normal' />
            <format attr='font-weight' data-class='subtotal' scope='cols' value='normal' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='band-color' scope='rows' value='#000000' />
            <format attr='band-color' scope='cols' value='#000000' />
            <format attr='font-weight' data-class='subtotal' value='bold' />
            <format attr='font-weight' data-class='total' value='normal' />
            <format attr='background-color' scope='rows' value='#f9e9e0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='cols' value='normal' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='band-color' scope='rows' value='#ffffff' />
            <format attr='band-color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-level' scope='rows' value='0' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths_per_million:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff0000' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths_per_million:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths_per_million:qk] + [federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths_per_million:qk])</rows>
        <cols>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:date:qk]</cols>
        <pages>
          <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
      <simple-id uuid='{BADE44F1-9411-4399-A0C6-60BB138F52A2}' />
    </worksheet>
    <worksheet name='TreeMap'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman' fontsize='16'>TREE MAP</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0203dwk15zwaqr14jsb1d1ur3268' />
          </datasources>
          <datasource-dependencies datasource='federated.0203dwk15zwaqr14jsb1d1ur3268'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
            <column caption='Location 1' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[iso_code]' derivation='None' name='[none:iso_code:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases_per_million]' derivation='Sum' name='[sum:total_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths_per_million]' derivation='Sum' name='[sum:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
            <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0203dwk15zwaqr14jsb1d1ur3268].[Exclusions (Continent,Iso Code,Location)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:continent:nk]' />
                <groupfilter function='level-members' level='[none:iso_code:nk]' />
                <groupfilter function='level-members' level='[none:location:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:continent:nk]' member='%null%' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:iso_code:nk]' member='&quot;OWID_WRL&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;World&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0203dwk15zwaqr14jsb1d1ur3268].[none:continent:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:continent:nk]' />
              <groupfilter function='member' level='[none:continent:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0203dwk15zwaqr14jsb1d1ur3268].[none:continent:nk]</column>
            <column>[federated.0203dwk15zwaqr14jsb1d1ur3268].[Exclusions (Continent,Iso Code,Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0203dwk15zwaqr14jsb1d1ur3268].[sum:total_deaths_per_million:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0203dwk15zwaqr14jsb1d1ur3268].[sum:total_deaths_per_million:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0203dwk15zwaqr14jsb1d1ur3268].[sum:total_cases_per_million:qk]' />
              <color column='[federated.0203dwk15zwaqr14jsb1d1ur3268].[sum:total_deaths_per_million:qk]' />
              <text column='[federated.0203dwk15zwaqr14jsb1d1ur3268].[none:continent:nk]' />
              <text column='[federated.0203dwk15zwaqr14jsb1d1ur3268].[none:iso_code:nk]' />
              <text column='[federated.0203dwk15zwaqr14jsb1d1ur3268].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{98FD7506-4BE1-4200-B3DA-86503816E1F8}' />
    </worksheet>
    <worksheet name='Worldwise COVID-19 cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='14'><![CDATA[WORLDWIDE COVID-19 CASES - <Page Name>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='countries +' name='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo'>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[avg:Longitude:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[avg:Longitude:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[avg:Longitude:qk]' field-type='quantitative' max='-25908718.185404934' min='-41719107.146585435' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[avg:Latitude:qk]' field-type='quantitative' max='9758996.5713675786' min='-3647671.2451396389' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_cases:qk]' field-type='quantitative' max-size='1' min-size='0' type='centersize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_cases:qk]' />
              <lod column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:Location:nk]' />
              <lod column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:population:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.5076665878295898' />
                <format attr='mark-color' value='#ffffff' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#990197' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[avg:Latitude:qk]</rows>
        <cols>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[avg:Longitude:qk]</cols>
        <pages>
          <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-type='all' start='19' />
      </table>
      <simple-id uuid='{F88300B3-8F73-4ADB-8ABD-159F544E630C}' />
    </worksheet>
    <worksheet name='Worldwise COVID-19 death'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='14'><![CDATA[WORLDWIDE COVID 19 DEATHS - <Page Name>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='countries +' name='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo'>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:Location:nk]'>
            <groupfilter function='level-members' level='[none:Location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:population:qk]' included-values='in-range'>
            <min>4999.0</min>
            <max>7990973205.0</max>
          </filter>
          <filter class='quantitative' column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths:qk]</column>
            <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:Location:nk]</column>
            <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:population:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[avg:Longitude:qk]' field-type='quantitative' max='42357593.692767203' min='-103979817.46927285' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[avg:Latitude:qk]' field-type='quantitative' max='65474452.723110959' min='-58614655.103027016' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:population:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#e5e5e5</color>
                <color>#e1e3e6</color>
                <color>#dee2e7</color>
                <color>#dbe1e9</color>
                <color>#d8e0ea</color>
                <color>#d5deec</color>
                <color>#d1dded</color>
                <color>#cedcee</color>
                <color>#cbdaf0</color>
                <color>#c7d9f1</color>
                <color>#c4d8f3</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths:qk]' />
              <lod column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:Location:nk]' />
              <lod column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:population:qk]' />
              <color column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:population:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='4.284820556640625' />
                <format attr='mark-transparency' value='132' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ff0000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[avg:Latitude:qk]</rows>
        <cols>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[avg:Longitude:qk]</cols>
        <pages>
          <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{0A984AA1-F6C5-41FE-BF59-19C47C7AB2E9}' />
    </worksheet>
    <worksheet name='countries wise GDP Per capita/ total cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='14'>GDP PER CAPITA/ TOTAL CASES -  COUNTRIES</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='countries +' name='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo' />
          </datasources>
          <datasource-dependencies datasource='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[gdp_per_capita]' derivation='Sum' name='[sum:gdp_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:gdp_per_capita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_cases:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:Location:nk]'>
            <groupfilter function='level-members' level='[none:Location:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:gdp_per_capita:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_cases:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:gdp_per_capita:qk]</column>
            <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_cases:qk]</column>
            <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:Location:nk]</column>
            <column>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_cases:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:gdp_per_capita:qk]' scope='rows' value='Gdp Per Capita/ Total Cases' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='background-color' scope='rows' value='#f3ebf3' />
            <format attr='background-color' scope='cols' value='#f3ebf3' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[Multiple Values]</rows>
        <cols>([federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:Location:nk] / [federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{D238DC2E-5065-4D43-8FC4-FAC16837D21D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name=' TIMELINE ANALYSIS '>
      <style />
      <size maxheight='1500' maxwidth='1150' minheight='1500' minwidth='1150' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='countries +' name='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo' />
      </datasources>
      <datasource-dependencies datasource='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo'>
        <column datatype='string' name='[Location]' role='dimension' type='nominal' />
        <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98934' id='7' param='horz' w='98608' x='696' y='533'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98934' id='5' w='84695' x='696' y='533'>
              <zone h='30069' id='3' name='COVID-19 WROLD WIDE CASES  PER MILLION' w='55216' x='696' y='533'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30069' id='10' name='Spread rate per million' w='29479' x='55912' y='533'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='29798' id='16' name='COVID-19 WORLD WIDE DEATHS PER MILLION' w='47912' x='696' y='30602'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='29798' id='18' name='TOTAL DEATHS PER MILLION BY DAYS' w='36783' x='48608' y='30602'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='39067' id='19' name='TOTAL DEATHS PER MILLION' w='84695' x='696' y='60400'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' fixed-size='160' h='98934' id='24' is-fixed='true' w='13913' x='85391' y='533'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='35693' id='6' param='vert' w='13913' x='85391' y='533'>
                <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' count='3' h='7333' id='9' name='COVID-19 WROLD WIDE CASES  PER MILLION' name1='Spread rate per million' name2='COVID-19 WORLD WIDE DEATHS PER MILLION' name3='TOTAL DEATHS PER MILLION BY DAYS' synchronized='1' w='13913' x='85391' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='empty' _.fcp.SetMembershipControl.true...type-v2='empty' h='28360' id='43' w='13913' x='85391' y='7866'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='63241' id='26' is-fixed='true' w='13913' x='85391' y='36226'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='63241' id='32' is-fixed='true' w='13913' x='85391' y='36226'>
                  <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='63241' id='27' param='vert' w='13913' x='85391' y='36226'>
                    <zone _.fcp.SetMembershipControl.false...type='size' _.fcp.SetMembershipControl.true...type-v2='size' h='2133' id='17' name='COVID-19 WORLD WIDE DEATHS PER MILLION' pane-specification-id='0' param='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths_per_million:qk]' w='13913' x='85391' y='36226'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' fixed-size='856' h='53242' id='20' is-fixed='true' name='TOTAL DEATHS PER MILLION' param='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:Location:nk]' w='13913' x='85391' y='38359'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' fixed-size='110' h='7866' id='21' is-fixed='true' name='TOTAL DEATHS PER MILLION' synchronized='1' w='13913' x='85391' y='91601'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1750' minheight='1750' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='58' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98934' id='57' param='vert' w='98608' x='696' y='533'>
                <zone fixed-size='280' h='30069' id='3' is-fixed='true' name='COVID-19 WROLD WIDE CASES  PER MILLION' w='55216' x='696' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='30069' id='10' is-fixed='true' name='Spread rate per million' w='29479' x='55912' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='29798' id='16' is-fixed='true' name='COVID-19 WORLD WIDE DEATHS PER MILLION' w='47912' x='696' y='30602'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='size' _.fcp.SetMembershipControl.true...type-v2='size' h='2133' id='17' name='COVID-19 WORLD WIDE DEATHS PER MILLION' pane-specification-id='0' param='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths_per_million:qk]' w='13913' x='85391' y='36226'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='29798' id='18' is-fixed='true' name='TOTAL DEATHS PER MILLION BY DAYS' w='36783' x='48608' y='30602'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' fixed-size='856' h='53242' id='20' mode='checkdropdown' name='TOTAL DEATHS PER MILLION' param='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:Location:nk]' w='13913' x='85391' y='38359'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39067' id='19' is-fixed='true' name='TOTAL DEATHS PER MILLION' w='84695' x='696' y='60400'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' count='3' h='7333' id='9' name='COVID-19 WROLD WIDE CASES  PER MILLION' name1='Spread rate per million' name2='COVID-19 WORLD WIDE DEATHS PER MILLION' name3='TOTAL DEATHS PER MILLION BY DAYS' synchronized='1' w='13913' x='85391' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' fixed-size='110' h='7866' id='21' name='TOTAL DEATHS PER MILLION' synchronized='1' w='13913' x='85391' y='91601'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#ffffff' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CDB38A37-A7B3-4435-A710-8DC98D8E597B}' />
    </dashboard>
    <dashboard name=' TIMELINE ANALYSIS_1'>
      <style />
      <size maxheight='1700' maxwidth='1200' minheight='1700' minwidth='1200' sizing-mode='fixed' />
      <datasources>
        <datasource caption='countries +' name='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo' />
      </datasources>
      <datasource-dependencies datasource='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo'>
        <column datatype='string' name='[Location]' role='dimension' type='nominal' />
        <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='99058' id='7' param='horz' w='98666' x='667' y='471'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='99058' id='5' w='78583' x='667' y='471'>
              <zone h='49529' id='3' name='Worldwise COVID-19 cases' w='78583' x='667' y='471'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49529' id='10' name='Worldwise COVID-19 death' w='78583' x='667' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='241' h='99058' id='6' is-fixed='true' param='vert' w='20083' x='79250' y='471'>
              <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' count='1' h='6471' id='9' name='Worldwise COVID-19 cases' name1='Worldwise COVID-19 death' synchronized='1' w='20083' x='79250' y='471'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='92587' id='11' name='Worldwise COVID-19 death' param='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:Location:nk]' w='20083' x='79250' y='6942'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='33' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='99058' id='32' param='vert' w='98666' x='667' y='471'>
                <zone fixed-size='280' h='49529' id='3' is-fixed='true' name='Worldwise COVID-19 cases' w='78583' x='667' y='471'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='92587' id='11' mode='checkdropdown' name='Worldwise COVID-19 death' param='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:Location:nk]' w='20083' x='79250' y='6942'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49529' id='10' is-fixed='true' name='Worldwise COVID-19 death' w='78583' x='667' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' count='1' h='6471' id='9' name='Worldwise COVID-19 cases' name1='Worldwise COVID-19 death' synchronized='1' w='20083' x='79250' y='471'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2CFED875-EFE5-4C51-81A0-B4B60825BF17}' />
    </dashboard>
    <dashboard name='TIMELINE ANALYSIS 3'>
      <style />
      <size maxheight='768' maxwidth='1024' minheight='768' minwidth='1024' preset-index='2' sizing-mode='fixed' />
      <datasources>
        <datasource caption='owid-covid-data' name='federated.0203dwk15zwaqr14jsb1d1ur3268' />
        <datasource caption='countries +' name='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo' />
      </datasources>
      <datasource-dependencies datasource='federated.0203dwk15zwaqr14jsb1d1ur3268'>
        <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
        <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0gdprgg0jm7dor1g2o2zp0fdkhuo'>
        <column datatype='string' name='[Location]' role='dimension' type='nominal' />
        <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97656' id='11' param='horz' w='98242' x='879' y='1172'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97656' id='8' param='horz' w='78027' x='879' y='1172'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='97656' id='6' w='78027' x='879' y='1172'>
                <zone h='32161' id='3' name='Date wise new cases and deaths' w='38985' x='879' y='1172'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='32161' id='13' name='Date wise new cases and deaths per million' w='39042' x='39864' y='1172'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='33334' id='14' name='countries wise GDP Per capita/ total cases' w='78027' x='879' y='33333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='19010' id='20' name='TreeMap' w='78027' x='879' y='79818'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='13151' id='23' name='CONTINENT WIDE CASES' w='78027' x='879' y='66667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='207' h='97656' id='10' is-fixed='true' param='vert' w='20215' x='78906' y='1172'>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' fixed-size='2077' h='85155' id='15' is-fixed='true' name='countries wise GDP Per capita/ total cases' param='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:Location:nk]' w='20215' x='78906' y='1172'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#fbf7fb' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' h='4167' id='24' name='CONTINENT WIDE CASES' synchronized='1' w='20215' x='78906' y='86327'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='4167' id='21' name='TreeMap' param='[federated.0203dwk15zwaqr14jsb1d1ur3268].[none:continent:nk]' w='20215' x='78906' y='90494'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4167' id='22' name='TreeMap' pane-specification-id='0' param='[federated.0203dwk15zwaqr14jsb1d1ur3268].[sum:total_deaths_per_million:qk]' w='20215' x='78906' y='94661'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='9' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='44' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='84000' id='43' param='vert' w='84000' x='8000' y='8000'>
                <zone fixed-size='239' h='32161' id='3' is-fixed='true' name='Date wise new cases and deaths' w='38985' x='879' y='1172'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='239' h='32161' id='13' is-fixed='true' name='Date wise new cases and deaths per million' w='39042' x='39864' y='1172'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' fixed-size='2077' h='85155' id='15' mode='checkdropdown' name='countries wise GDP Per capita/ total cases' param='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:Location:nk]' w='20215' x='78906' y='1172'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#fbf7fb' />
                  </zone-style>
                </zone>
                <zone fixed-size='248' h='33334' id='14' is-fixed='true' name='countries wise GDP Per capita/ total cases' w='78027' x='879' y='33333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='93' h='13151' id='23' is-fixed='true' name='CONTINENT WIDE CASES' w='78027' x='879' y='66667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='4167' id='21' mode='checkdropdown' name='TreeMap' param='[federated.0203dwk15zwaqr14jsb1d1ur3268].[none:continent:nk]' w='20215' x='78906' y='90494'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='138' h='19010' id='20' is-fixed='true' name='TreeMap' w='78027' x='879' y='79818'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4167' id='22' name='TreeMap' pane-specification-id='0' param='[federated.0203dwk15zwaqr14jsb1d1ur3268].[sum:total_deaths_per_million:qk]' w='20215' x='78906' y='94661'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' h='4167' id='24' name='CONTINENT WIDE CASES' synchronized='1' w='20215' x='78906' y='86327'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='9' />
                <format attr='background-color' value='#ffffff' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7D2D104B-FA36-4619-857F-B313F0656015}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='COVID-19 WROLD WIDE CASES  PER MILLION'>
      <cards>
        <edge name='left'>
          <strip size='144'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_cases_per_million:qk]' show-title='false' type='size' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-08-08#</bucket>
          </multibucket>
        </current-page>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{8F4373D1-1B90-4F29-983B-19529FF31C60}' />
    </window>
    <window class='worksheet' name='TreeMap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0203dwk15zwaqr14jsb1d1ur3268].[none:continent:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0203dwk15zwaqr14jsb1d1ur3268].[sum:total_deaths_per_million:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0203dwk15zwaqr14jsb1d1ur3268].[none:continent:nk]</field>
            <field>[federated.0203dwk15zwaqr14jsb1d1ur3268].[none:iso_code:nk]</field>
            <field>[federated.0203dwk15zwaqr14jsb1d1ur3268].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{80F2D6AF-8A4A-4A12-A026-6E5572174681}' />
    </window>
    <window class='worksheet' name='Spread rate per million'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[yr:date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E7BABC4D-746F-4539-949A-BF88BE7D984D}' />
    </window>
    <window class='worksheet' name='COVID-19 WORLD WIDE DEATHS PER MILLION'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths_per_million:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-09-03#</bucket>
          </multibucket>
        </current-page>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{737C19E4-FC6C-4EF8-BC2C-B7F6E28603DA}' />
    </window>
    <window class='worksheet' name='TOTAL DEATHS PER MILLION'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:Location:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths_per_million:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{43A8A8E5-0233-495A-BF48-09F673A99C40}' />
    </window>
    <window class='worksheet' name='TOTAL DEATHS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>26257900.0</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <simple-id uuid='{A8BA1546-1ABC-4F90-971F-CD36FAAED968}' />
    </window>
    <window class='worksheet' name='TOTAL DEATHS PER MILLION BY DAYS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-06-08#</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <simple-id uuid='{03C10F8C-3A83-4532-946D-E92FFD50ABCA}' />
    </window>
    <window class='worksheet' name='CONTINENT WIDE CASES'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>806925818.0</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <simple-id uuid='{99EF9F5E-2067-4030-BF9C-A50AA60AA3A4}' />
    </window>
    <window class='worksheet' name='Continent Wise Death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_deaths:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2F7069F9-F387-46F3-B36F-BE643688577F}' />
    </window>
    <window class='worksheet' name='Date wise new cases and deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D5FDEAB4-6FA9-416D-91ED-7AA1767B1F36}' />
    </window>
    <window class='worksheet' name='Date wise new cases and deaths per million'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{29542180-B497-4B95-82EA-2A9B0BFCB7C1}' />
    </window>
    <window class='worksheet' name='countries wise GDP Per capita/ total cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:Location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1D131AFF-8FEC-4534-B158-C6E1455AD54E}' />
    </window>
    <window class='worksheet' name='Country wise aged 65 older/ aged 70 older '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{CBBC1ABB-51A1-4290-9366-1D4E55A3BE36}' />
    </window>
    <window class='worksheet' name='Worldwise COVID-19 cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:total_cases:qk]' type='size' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-07-18#</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <simple-id uuid='{D541F566-C3F8-4430-A617-6FD0B19EB367}' />
    </window>
    <window class='worksheet' name='Worldwise COVID-19 death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[sum:population:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card type='currpage' />
            <card mode='checkdropdown' param='[federated.0gdprgg0jm7dor1g2o2zp0fdkhuo].[none:Location:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-09-23#</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <simple-id uuid='{C45B0834-AE78-46E3-9F4A-36B59EC26A8A}' />
    </window>
    <window class='dashboard' name=' TIMELINE ANALYSIS '>
      <viewpoints>
        <viewpoint name='COVID-19 WORLD WIDE DEATHS PER MILLION'>
          <current-page>
            <multibucket>
              <bucket>#2020-08-01#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='COVID-19 WROLD WIDE CASES  PER MILLION'>
          <current-page>
            <multibucket>
              <bucket>#2020-08-01#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Spread rate per million'>
          <current-page>
            <multibucket>
              <bucket>#2020-08-01#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='TOTAL DEATHS PER MILLION'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='TOTAL DEATHS PER MILLION BY DAYS'>
          <current-page>
            <multibucket>
              <bucket>#2020-08-01#</bucket>
            </multibucket>
          </current-page>
        </viewpoint>
      </viewpoints>
      <active id='20' />
      <device-preview selected='Desktop' />
      <simple-id uuid='{1FC361E6-F9E2-4430-9A25-7F874ABC8D60}' />
    </window>
    <window class='dashboard' maximized='true' name=' TIMELINE ANALYSIS_1'>
      <viewpoints>
        <viewpoint name='Worldwise COVID-19 cases'>
          <current-page>
            <multibucket>
              <bucket>#2020-09-22#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Worldwise COVID-19 death'>
          <current-page>
            <multibucket>
              <bucket>#2020-09-22#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{01AE6083-022B-4412-802A-F315CB742033}' />
    </window>
    <window class='dashboard' name='TIMELINE ANALYSIS 3'>
      <viewpoints>
        <viewpoint name='CONTINENT WIDE CASES'>
          <current-page>
            <multibucket>
              <bucket>806925818.0</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Date wise new cases and deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Date wise new cases and deaths per million'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='TreeMap'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='countries wise GDP Per capita/ total cases'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6FC07F63-833C-4A29-A10B-7EBF5FE10BCA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name=' TIMELINE ANALYSIS ' width='192'>
      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
      U2+8AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name=' TIMELINE ANALYSIS_1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CONTINENT WIDE CASES' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='COVID-19 WORLD WIDE DEATHS PER MILLION' width='192'>
      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
      8DkXc1IAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='COVID-19 WROLD WIDE CASES  PER MILLION' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Continent Wise Death' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Country wise aged 65 older/ aged 70 older ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Date wise new cases and deaths' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Date wise new cases and deaths per million' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Spread rate per million' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TIMELINE ANALYSIS 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d3Qd15ng+at6OUc8RIIBJEGCWVSgsmRblmxLY2vc8rjtVnvcPVZPz/y1
      e3b3nDl7dlZnpuf0zs7xTnfbHaxx2x5HSbaCRVKWKAYxJz2SIEEQgQAR3wNexMuxqvaPR4IE
      ARAACTChfufwgFW36rvfve9+de/9bhIURVFQUVmkiHdaARWVO4lqACqLGtUAVBY1qgGoLGpU
      A1BZ1Ghef/31169cZBIRQmNZLDqFSKpAoK+LvoEhtFotqXwZpZAkVVDIJ2OIRitaEUaH+xgK
      J/C6nfT3dKK1uNBroOP8WQrokTJx2ju6SOXL2I0iZ9suYHW6MejgyJGjZLNlvF4XIyMjZJMx
      Orouki9DLpPCZtZzaXAUu0lDJFnAYjJwvtVPNFXE63Ey3NdNd08fsqjHbtHR3tFLVZWH861+
      BoeDV+XYbAQCAYx6kXPnzmOyuzDqtVdzoZTDf+YsRVnEabeClKe9u58qr4Nzp08zFAhSlEWG
      L3UyOBzE5qrCoNMs+I8zMtSHpDFRSEZQNDraWlsJBEfRagXQmokE+tBZXURCI1itVkDhYsd5
      cpIWu9VIe3sHVVVVlAqZ8XSHhnq42NsPWhPl7Bhdl4ao8noRBZlzp08TSxeocpo5fboSl8Nh
      5dy5NvKSgMthA0q0tXXj83mJjg4zlpVIJeLYjFoC0TQ2i4lAIIDNZiOXipMuglYpcPZcOy6v
      j1wyTDRVxCiWiWfLmHUSR062saTaSWd/EK/LwcjICMlYiK6LvZTRkkklMetFBkfHMGlKJAsK
      Jq3M6dOtZMvgdtjo675AT98Aot6CRSfT0TtElcdKq/8Mw8EgZUQyqTQ2m4lAIIRBq3C27cLE
      GqDv3FH+7sdvkYv2sd/fxY4d2wEQNRLbP/iIA/v3sf/AIT76aBeiBoJdn/H2Hw4zFo+DUuTj
      37/FJwdOc/KT3/FZT5i+vj78+3cQSFXk/+x//IhsIc/gUJBgx2foqrz87X/5a3pDKXbt2sX+
      Hdu5/Cg7d+5ktPsUP3pzJxdPH6A3nANgx/btDHWe5Ne/38v27TvGdR88d4RfvPkukZwEwPbt
      Fd137Ngx/veXP36DVL7AwGBgYklLB9n+qZ+Tn7zLXn833f6D/Ort35MqARTYvv3j8bhvJ7t2
      fcjOnR9z7ugugtEo2z8+AkByuIODZy7y4Vv/g1NdI+zatQuAPe//mrb+MPGxOInBc/zyF2/S
      E8lNSPfVPJP4p398g0x8hHAiDxTZvv1juk7sYu8J/3hcqUAXn/o72fW7nzEwVgbS/M1//msG
      E0X2ffRbdu33V/I4HWTHfn8lny7nebDLj78ryD/98Adkc2l++I8/psu/n3/4+bukgl0cPddH
      x2dHqVq+GtJB/stff59QqsiuXbsm5PXOnTvoPnWIN3fu5fSBXYRzQLGSH2cP7uAPR86zfcfV
      snDuyD7efHcnlaKQYvv2T4EiO3bsGv97pSxOagI9u20te46cByCTiOL3+0kWjGiUDCUMaOQ8
      kiCgAzrPn+WL/+IbbHtwM4PnjiL7NtLddoz12z5PcaSLcx09ALS3+ukdCPDCC1/Ef+wwQyMx
      TnWH2LrKx7Znv8iRPR9fjr1Mq9/PQCBMg03HR2eCPL7Gx9HOCBtW+gBw+ep47sU/IhfuRS5m
      8Pv9jEaTfHqsjac217Hv8BnWbdpKXV0dKxrrGOhs5Y033iCUKvH8l57nzIkjDATCALz365/Q
      G4gDUNe4gj/65tfovdDFQX8HjzY72H+ikw1btlBX18Cyhhri4SB+v59c+abK89zRWmmwlhiI
      VYx/dLgPv/8c9eu3EDh/GG/zowTPfITGWg9ATyjDV59/lvXNTez79BhPPbWZT/cdnpDucj6F
      3+8nHM/yuacf4eCho6RyBQCio8P0DMeo8djH45I10Hv+FIGciWpbpdZ87KlH+ezQp+is3lm0
      oUsY7DU8/tgTOM2Vp5/a0sSn/m4AukMZVvksADz7xefY83HFmCnn8fv9BMJxbDoNZ4I51viM
      dEYKrPSZAKhpWMbL33yF4Y4OipkEfr+faDLDsbZuNtdpOHxmkE1bN1FX10hjXRWdrcd5442f
      kCoxXhYn6e9bsYXEcPvEJJRLOHRlChoremkM0VwNwNbHP8d7P/nv/Oyt33P49EUeWLsEk5zn
      XGcXBUVDqVAYl1Eul+nq7ECvN5LPRJG1lkrkGiOrfQb6ovkJz27euIpTHYNsW1vL6UsxLJdb
      HL3n/fzgb75P06bHr+pXypLIlfE1tjDSfWqC7o3Nm3jttdfw2XR0dXWi0xvJFypxvfytP2NF
      nQsA/6HdfP/vfs7jT2wkXYDapo30tx2f8ictl2+XBcCTz73Aif37ro2dMg6iF09Q3/IYAxf8
      rN64GYDHNzbx//3tD9l14AQjiRxVvkYSI92T0l1JQ47Ojh4MOg35YiU9zZse4X/9P/4DLUvc
      V+MqwTMvfZM11Tr6gxEAtLZ6hk7tpeWhbRN09R/azfbdh4gHennjjZ9TMVsdDl2Wv/+HHyJa
      Kx+x+rWPEOk9g5QNo7X4xt/XGJ34DDmuKQqUy2U2rvLRMZhkba2FSzGJK43P1uOf8v3v/4iH
      nr6mLGSj5Mp6GlseoPvU4Qn6NW96hNde+zNsOsbLonAnRoLPH92DadWjrPCab3fUKncRR/d8
      yKpHn8drXvj+1HTcEQNQUblbUN2gKouaCW7QUr6EVJSQSrf2T5ZkNNo7V63dL3z83q/5ZP8h
      wimZtqO7OHj0JCWtlb0f/Iojxz5DNnloqHaz83c/I5jWU2vO85/+9pc8uMLB0a4o5/xHaW5u
      pu/cEQZzJqqdZrZv306918KPfvwz/K0X2LB5Lf/vf/6vPPTkU+z55GNWrlw5QYe///5fceLU
      WezVS/E6Tfzw//kr6jc8xolP3uXnv/kt4VSZ9uO7OXzcD0YXdT7XHcqtm2NCDVAulClmizP+
      6+3soPfSEF1tZwkOj3Lms1MM9A4yPDhIIpmnXLh9ncT7mdFwmu9878/pbT9NIFhx3eq0OuKp
      PJs3ruFC+wUAolmRkUttnDxxGofLTDmfJhxPEwwGgYo3L5EpAhAMBvl4+4e88ud/yfNb6zl4
      uhunRcNHe44wOjoKwEBvJ0MjlQ6vzubj3//l99j30Q5C3X6Wbn6EQweP84WXXqGuro5XXvrC
      uG5arZZ7jZtqAkWiEULhPrJFIx2n9+GsqeXMqVba+ocwadVW1Vzo/e1FFHmablgpxc9+8nO+
      8JWvorP5eO2119i6bgUAJ46d5Kmnnxh/1KYXGc4LVJlmrnltZj0joTjBwAhWqwWrrwk51kt2
      mu9WMhZCFg3sP3ScS5f6aWs9MSHc5KrjtddeY1Nz4+wSfRcxoQlULpSn/zGuYWwsit7gQC6O
      4fY1EhkdweOtxu0wYTA7MOg16Iy6hdT7viFyYhiNWY/Ra5ocqDHwwosvUu20UUqF+HDXPkpa
      K8sbG/jay1/l7JmzLFu6BIBNa5uQDW7qfW6qa6rRmmyYSnF27TtK86YtHN//CSWtlYYaL088
      8yxHPtlBybGczz3cgoDIIw+sJZIVaF7RiMPlxW6teOgGOls52xviG9/4OoLOxNdeehG3RYe3
      tg5RgLq6OnLxAB/t3n9PNoEmeIFyiRxSSbploRqdBpNjih9UZRKDH3SisVupe6b+TquyKJm2
      0ZaKjdAXybBu1QpEQbidOi0KggeGETQiAgqKdOsfHZWbY9oGu1TKc/jAJ/SHErdTn0WDnC9S
      TmRm1eRUWTimrQFErQGb2YCs/kALgiLJIEkgy9M+k46kbyijr7udquUtWG7gfLF6rTer4qJg
      2hqgkIiASc/YWPZ26nNfkgvnSPWl6P1dD4VYnku/6wZJQpFlkG+u+aPIMqVSEfXzdGtM8+0o
      E8kUScfSNNS5JwZJOY75z7G01s3ASARJY0AolzDbrQiSxMZ1GxZe63uI0aMj5EZyaAwKGqHI
      4MeDlGIpdI0WlLKEqJ17/0oqlzh04BMiqSJ1qzcvgNaLh2lrgEBgGJfTRen6mY9SgUyhQPfF
      bqp8VUQTOTw2M9lcmrK8ODrLbT84O+Mz2WCWUrpEcG8/gx/3IygSohbKyRxIZVAURFFBZ537
      4FG5kCFVkHEZdRTVKuCWmLYGSGeKGAwGhOsrWb2TjatXYHNXEwuH+PKTWwnFktRbzciSfF9X
      yblwjku/66GUyFHOlul7rwfXeg+hQ4NUPbYE9wY34ROjVD1czfH//RDr/5ctmL0avBtrUfJ5
      EASKYzk8a8zkY3kav1AFQKhz5mbQgQ/fZESo5mtfehaDxUo6OkrR1YDt3ht8vauYsgbIjKXw
      1Nax9eEnqPfYAcjGhvn08H56A1Gqqusx6rTU1dWh0Rqo9VVhMVuw2Wzcz3VAuj+FyQmuVVai
      rRGSHSGygQzWJSbSvXFi52IURsboffsizd+sJ3wyhHuNjcxQGvsyM7ZGE8V4Hu8mJ5Ya/Zzi
      Xr52A41Vnsv5q2X16uW0njhMsrQQKV08TGkAFmcVD29Yy5mju/ngk4MUAVGjQas3Tu82us/J
      BjOUUiW0RgGNQSTREaP6IReJrjhIElqzQPs/tiGIComOKJ51dnIjGWxLzRTHCpirjVhqjGj0
      AqJWxLPeMaf4c7kk/s9Oc8Vn1Lh0NY88+hhWdcD9lpi2D5CMhhBsFlY1NaMHSrk0oegYGv3i
      NIGOH7VVXJaXXZf5cBb7Mgv5cLbiySlLrHixBsoStgY9ok5ELpYQtSJVDzjH5egdcy+xkf4L
      HGu7yOe//CKGy/f6+zroOH+BrDqGdktMW5p1BgNGgxmdRgQkjvtPIYhWstk8MLev171MMVlE
      EAVEsUxxLI/ZqSMzWqSYKKB36BAUGaPHQLw7i9FjQBRh+ZdrAFCKlfaJZ93V/Fr9r+Y+YUxr
      NGMzW2k7dZTljS+iK6YZDETxLV+JXatwqbeTsqyQSmUwGe3orVrqapepExNnwbQ5pDca6O/u
      weSwAhrEcoF4KoWoWVw1QPhYgN63L9LwjJd4exT7MguFWB5RlBE1AnWPu7DUGMmFsiil8oQv
      vN4+P2sinNVLefrxp2laVocOCPVdIKEYkWJDhAoCklRGKaSpWbqc/kt99I/GKoVfLf8zMm1p
      To8lqWrwkYglqXcaeeTxp7jw3odkcnkudZ5CMVeTjIcwWx1ks1lsditIMk3LV9xO/ReM9GAa
      pSwhZ7Ok+5Ms+1w9ohhBY9TQ9HIDg3sqc+e9GyvNG1ErUPe4Z4KMmkc8k+TeLIH+Dnp7I6zZ
      /AA1qx/iO6uvhJRoy8vU1K8gNBJk85ZNaPSQKUpY9OqipJmYvgmk1xIcDNK8tvKIVqfFbrMj
      ljMMj4aQtFmWNNRyvneE5ho7oWgIg/b+WeSeOB8CQUAplxEFCVEr0vKdZePhSz5fPeH5xueq
      uZ5rmz63ik4vYrU4x71sw/2d7DlwjJf/+Dus37ARAK97/gxusTCtAciCjuZVK9FrKl+RcqlM
      vpBDa3bx2GPPUFC0xCP31zhAdiSLucbMxV91YrRDMVXC7Nay/t8sm/Fds8+4oLoZDWYGQ31c
      aWBl0wmyxfJ97Xa+HUzTSsxxqr2Pplo3Y6nKJi1n2s7jtLnwuh2IOiMm/f03DvCHL+0gfiGO
      nEyiyDKuFUYcK++OyWQjoQjZWJgrW+akEjHc3jo0ajv/lpgm+0ysaaohkNazaVU1kKejux+9
      Xqazq/e2Kni7UCSZUrJI1D+Kd7MTrV7B2mBCa7w72tENdbUsX93CleEzu6eGQiqGOln31pi2
      CeSw2zh8Yg/e6npW1Lj48+/95e3U67ZSTBXJh/NUP+QmPZBg6TMN2Jbcaa2uIkslZJ0ViikU
      IJsIccJ/iov9QcoycHfY6D3JDRbEFIglUgj3dKNmZjKBDMHd/fS938uGf9eEnL/75haEe88T
      zgk4rFYkoJxPEYhleWDTJnT398+zoAzs7L/BghiNyNLlq3Hb7x/PzrVc/FUn5hoTxVgWjVim
      PJbGsaKKpq/dfeMc1as2EW49SU3TGkxAsqzhm9/4Yxp8qtfnZhg5FKTmiVqGdw9MbwD5RJyu
      S23UL11/uR9wGaXMxe5OEHUkUinsTjepTBaX3YoslWla3nQ70nDTpPpSWBosZHrDaEQXRpeI
      3qpnw2vLgYX35twcAnablX0H9tO47NtU1y2lr6edvRdasbpqIBNjTUsT7V39SAUBs9fMmpXr
      1JFgIHI6jHdLZdbt+b9vY92/X0+qJ8LgRwMYncJ0TaACZy8OU+uswukwTAwSNJTLRcq5NI1L
      6zl7cYgqvcBQZIRktjC1uDtA5FR4wnUpUyLZkyDuH+T8D1pZ+fUGXKuMeNfbsS+z3CEtZ08m
      GSd3ZccOQSASHiU+lmRdSwtut5tyIYvHV0M2m2UslUd/G0eCO3/acXsimoG+D/oY2NFD4mKC
      1v92msxwhtCxUbIjWUInRhF1EPaH0NtFzF4qzo6pRYmUCjkErQGT4bppu+UsBUXPkoZagsEA
      n3uwhWAsyZrGKkql0m0fByiMFVDKMtFTIXyP1SGXZZLdCYZ2DyLly5iqzQR29WKqtZELJPBt
      sWNfakBv16G33ztTKUVRw9qNm8a9QFUeF4fPXkIryOgMeiSdF4uU5oknHkYQoViUMN2mkWAp
      f+d3AgydDJHoiOFs0jP4YR/OVSbO/91pjD4j4ZOj5AJxLDUmYv5BGl+oofqhyv5F0xiAwJJl
      TZQB/fWOZq2FTevWAeB2VZZLulx3pi2aHckSO3aJ8Lk0VZtsjHzaT2YwycjRCK4WB3JijPhg
      mJoHbYz6E9Ruc96lTZyZSWQinDw8yEMPbcIMhKIJ6t028ogsXXZlP887M0mxeJsXJWQCGa7s
      1GOutdC/vQ+NXsG21IDGKGBfqgVFQWNQKKdyhI8O4X3AiVwqs/TLtRNkTWMAWtZvvLvXmiZ7
      Ewxu72X1133YGo0Y3Xpi7SmaXqqm9pFKQbi2sK948d7dqCsVCxJJKNQuqbrcqimjEUUKMuju
      gnEARVaQChIaw8LXONlghkTXGFDZVS/Rm0Mulmn8cj1IZRxNLoqVs62wNdZj8hnp/EUfumnO
      ILj7XB6zJNk+yuqvV04XuVLQvRsnF/z7AVEQyObymC02NEB2LEJ/KIbVcnd46LQmkVKmRPs/
      nWfJC0uQSwru9e6ZX7wB4VNhqh6odF773r+EVJQY64hTiGSpedxDMV5i2UvVJHszOJttJHsz
      uFsqz1+/zrr51WXT635LWgLhkUEGI8nb6gUKHghgrV48Hg6NzsjKplWA9vKojHBX7dant2kZ
      PRJEzheInolgdOsJhHNUPexDZ5m5n1VMFQkfD+F5wEuic4zMUJqRQ0FKiQKpnjA6qw77EgP2
      eie2pRO3kPRuqszGdbfYb0r3WzeAsRRVeoG+yAhWg+1Wxc2IVJQojUbxPnprX5h7CaPVyeZr
      mqRap4eGKjdD4Wt37VMIBAO4HE4EEQStCcNtcINmR7LorALZoQR1T7rIBHJIOYlcuEBmOEPj
      i0vp/kUXpWSe+ucakcsK9hV2NEYNIweHyIfziGIZ9zoroYM9CKIGvUlh/WuNBA6NsOwrdQuq
      /y0bwLK6avrC8+cFCp0M4XvIN2VYqi9F4vwItdMU/lRKQq8XMBju79ohNtTNex9/gt1ZzRcu
      30uHeskUNZw/fAK9x8GTDzyw4HqMHArQ/14X9Z/z4Vxpx1xtxNZoppgsIeWKlFIposd7yY8m
      Mfn0DO8eQBTK5IbsGFw6bLVavGsrxgBgqZ3YT1vowg/XGYDWoEUzxwOg9eZaNtdM7FkjMGGX
      6dHBHKGhPFNRzpTIXz4DWC7JpPqTuHpzmGsrvvlsMINckCgmCuiMMtYGM92Hc2QyZUolhdBQ
      alyWIOVQ0IBGj86gpVQoY3EYkMuVpeQGk5ZkvICnxkJ6LI/BVEl+Ml7A6TUxFslhdxlIxgsY
      jJrx501WHZlEAYvDQCqWQ6vXjt8DkCUZi70yXlLIS+NhpZJSkXP5B74SlorlMF1uGpRKCpse
      rqVm3MfPjKfr6E121reso1gojS+S1xrMRPv7MZnMmIwiuQVaEJMNZjHXminny5QzBVZ/uxHT
      dX0uvV1H7ePe8Wv35XURUl4aL+x3CwtySJ5UksglcvMtdlFw7dby0+0NWswmab/YC4i0rN+I
      /gYV3nzuDVrOl2n9r6ep3uajlMygNUHV5kobPBopU5hhl666uoUZdykUZIpFBb1eIJ2S8Xi1
      RCNl9Iar/aRoRMJmE7HaxAnPqgZwlzFfZysoioIsyxTTxfF76USJvo40yjT78Qoi04ZBxd0p
      agWu7X9fqbg0ujIabvCyALmCHs3ldyc1NESBaed2XxcmXf7vlX2FZRREQUYURAShjKLoEIQS
      kixW1ksIoNOUKJU1SLIWkAERjVheWAMIR8JUeasmhHV2d9K8qhmA0MgQmbKATimgNTmp8U7f
      se3p7qBx5ZoJsx9z6QShZJaldbUgl+i62I3LXcVoOMbaNc3jmT0T43oW04TzGjSFKGWtE5/L
      SiGboGcggMftJp0v0dTYMDuhikR3dycObz0+t4NMNoPFbCEeC1KUzVR7HeOyq7wexjJ5Vi1t
      nPfDRSbVIgIsyHD9QsldYNkLOg4QDg1x5vQJqpasQirm2LpxE9I1uyHbrBaCgyF0ggSZkRsY
      gEwyNsSlXj2x5BhGRBx1dSyv9pEZHgZqQdBi0gt0dFykZbWPoViepZ7ZjQeEo2GKpSJkRkkY
      l9HiM9M+lMbnsqI3WZELaQZGZSxzmHucifSjcS1lNHCB4LCBZHqMdeu24HbbaO+MUe11jMvu
      C8rYdCBxG6b2L1QhXcgBuQWUvWAGEBkdRKfVYXe6Kcoi1U4nIJFJJgkGBjA4qhnsuYjLt4R8
      MozG5JxWVjEVRrE2IGdGSecEzBYbNdU+0skYyWSK4dFRap1G+kJpmpbVcikQp2X97HanSI5F
      0BksxKIh7EYdFoOWcDRENqcwGhbQFlMUdTbcJi2Zwux3oTI7a0h2dOOwe0gm09RV16IAkXCU
      TC7DaHh0XLbXrCeZKy5Y4W/vbMdtt2G1u4jG4tTVNRDpayVjXcnKaiupsQinz3fgdtvJFmQe
      3nzjWQAHdn9Ay7bnSMfCeNweyrKEUVRovzTA1g0bQC7S2XmOcLyEVqewev3DuGdxeN8VXZc3
      VmbmXhq4xPL6+qtylTLdnW0Ewyn0Ru2c5CZCA1wMJbFabFh0IqPhAM1rttyZPkA+n8dgNM59
      qY1UJFMWsBgmdqby+TxG43yP/irk80WMRsPMj96U7MKUOs93EygVTtHW3oZUTJNLJ7F66jB5
      ltOojzFQdLOy2kpkZIB4UUMxE0dRYH3L+mnlyYUEnx47icNsQmt3M9I7xJann8RnNtLe2U5L
      cwtIeT47ewG3xYCoE9B5mqi3z7wXqqIotF1ow2gwIskysizR0txyVa5cwt96FqfZhEY/e7kA
      ob4OSo46BtsO416+jUI6wPrmFrUTfLcx3wYQ6huiqOjJZ8Ywm4xodAZErZFEdJiSIqAoOpwW
      LaFYirpaL5m8TJVr+kl1pUIWWWOilBji/HCG9U1LMFos5JIxRiJjCFoty2t99A4OUeWrIZ1K
      UV9bO628aykXssQyRbRKAXRmDFoRpVwYl9tUX8PF/gE83mqymfSs5VZQGB4axFfbwGhwGJvN
      jMZgUw3gbmPBO8EqE7i/h0xVVGZANQCVRc09Ox16rvzyFz9GY/XwzEObGe7vJWmoZYVbi6+h
      CbO6h+Zt5e23fo4gGnj0yScoJkb47GKCJzctx+SsxWm9vVPZF00NYHV60QsyFzov0H9mF0aj
      wocf76F3IHCnVVt06M12XCYNrRc6iEe60GuN7PxoB719l267LoumE9zX04HBUY2cS2CxGImm
      imikLI6qRly2u2NhCSyOTnBgsJeSxoJZLKIx2YjHopi0Ahqzh2rP7V3WuWgM4F5hMRjA3cSi
      aQKpqEzFgtQAKir3CmoNoLKoUQ1AZVGjGoDKokY1AJVFjeb1119/ffxKkdjz4e/Zf+w0K5tX
      887Pf8K57kGaVq3i+L6dfLz3MFX1y3BYTXz6h/f45MBxapeu4NDH77Dv4FGsVUvY9/tfcfJs
      FytWr8Gg0xANXOKtt9/B5mtEkwux50Q7q5cvYff237L3sJ/6ZSvpbD/HQFcrH+7aR2vnAFs2
      rGXn796kZuU6DBqBHdu3s6q5kV+88VOO+/3kMJKP9PH+h3uoXbqCT3e8xf7DxwnEc6yssfC7
      Dw+ybs1K/H4/dXVXdhZQOLhrO4dae9i4dhVH9uxEttRgIstbv/kN4YwCqQC/fX8HgXgOq5Li
      7Xe3Y/XW43FMXld78uAuPjnUyoYNK/nDu7/lbE+Q5tVNnD5VibO1tZXRvg5SWMkEu+kbHuWD
      Dz7A7/djNBp5//33CafLrKy24O8KMtB+jA937aOktRLtb2PnJwdoXNmM2bBoBuvvCBNqgFN7
      30fyreNbf/QiGrFMumzkuW3N/OqtD2jvDfLdV7/BjvffA6BrMMy//tZX+f27v6fjYh9bt27F
      57IRz8PnN9Xxh4NnAPjNb9/jX736Heo9Vg4eOMpI/0VyEvQG47z6jed4/70P8fv9bHvmSwD8
      2bdeJhvqZjSW4MCJdpRiEnR2BEz86WuvAC6e2NjAB3vP8O1v/At+++abvPTKnwLw0heewH/o
      IPHwMIFUCb/fP5623lN7CWkaePmFZ0DKcml4lAP7D3Dm0McInpWsW9VIb7uf2tVbWbNyGdu3
      7+TBx5+iyj7ZJx/pPUVbSMM3X36Bzz55D3PTI7S4C3x8rGM8ztbWVlq7LnH8090MdLVia9xE
      S62Rx198FeK9tDz+FS59dohMPo6/vZfT5zrYunUrjbU+Pvx4L08//SSG2a7pVLlpJhjA2FiK
      JUvc/M1/+r+4MFTZdMldXY9czJCLB/jxP/+MLdueBCAVGuDHP/kVDz3+5ASBvZ2DUpoAAB4s
      SURBVOc/46/+8V2+/ExlXxpRZ8Ss12EyGfjMf5zh7tMcab1EPNDLP//sd2x78tFJSh3cu4fR
      bImTB/fSevwYm7Ztm/hAKYfJ4cFocWDQTPTiHjzxGdlQH3v2n5hwPzE2Rm1dHWazmW7/QVp7
      RjnpP8nDz7/C2ir46S/fnvD8d7/3F4R6Wtm++whQ4tc/eYNAvDK4l06M4autw2g2k0llqanx
      UVNTQzqdRlEUUMpIkgBoeHClh88ujkxK4zs/+e9k7EuZamP2f/uX/5YTuz/A3zU8RajKfDKh
      CVS/tJF3f/VLRIuDhx55mFOffszp9m6+8vIrFIslvv0nr7KkprITdDSR4dt/8ip1VU4unDnB
      8GiUqoYVWCwW/virz+DvGGHl0lq0xQTv7tyFVlSoanqI7776R7SdOYevtpY/efVVajx2AoEA
      zc3N43+7B8N899Vvk4uPEilIPLKp5bKGZQKBBM3r1xO9dJpde/bzwFPP0+BzV95duYREwcCr
      3/0O/R1nMZHn4NGTLFm9kaam5ex+/038nQMIgpbv/pvv4tPk6BuJcKq1nfplq6hzGWk934Uk
      6gh0t9IzGGL91m00+Lxs2LIVm6myEs1Z08DJ3e9zxN/Jl7/2Fd7/1f/kbG+Yr3/ty6RHuvlo
      934eeuYFhHKObc98Hv/+T9iw7Vnk1AhW33L0pTHWPflVTMkerN46kgUBszTGxf5hjI4qTn76
      IfGCyLZHH8NhWYgVaSpXuKsHwpRigmNnB3n0wemX6Kmo3Ap3tQGoqCw0qhtUZVFzyz62Ur5E
      uXDnj8hRUbkZbtkAFFmZsBGuyvwRiUTwer0zP6hy06ijLHcxh44e4uFNG+iLpHEZZMw2N4PD
      I6SVHGJRZFmNkzxGMtFB3LWraV5xFx1vf4+gGsBdTGR0iM/OQjJbxGyAGquRPxxs49GvfZl8
      dIiudIg8RrRKmtFYSTWAm+CWvUDFbJFitjjzgyoqdyGqF0hlUaMagMqiRjUAlUWNagAqixrV
      AFQWNaoBqCxqVANQWdSoBqCyqFENQGVRM68GkMvl5nQtFXMUr5tHN1cZ8yXnZmTMl5ybkbFQ
      chdbfk+YClFIF5ClGxx2PAUanQbNpFOPVVTuDSZMhpMl+YZTm2PRUUJjGQxCibJoZNWypWh0
      Gjo722lZv2HBlVVRmW/m1AQym0yUy2WKpSJSuVw5wVuAC21tC6SeisrCMqfp0Ol0GrPZjEHQ
      URIMlRO81RXFKvcwczIAr68OdX2Syv2E6gZVWdSoBqCyqFENQGVRM20fIHzpPIc6O1i27DG2
      rKkFIDDch2CwkYmPYvfU4XM7b5uiKioLwbQ1gNXlITQUobbmaiF3OJyIgkA6kyaby427QVVU
      7lWmNQBBa+ShjU2EY5nxe4ODAygK6PUGNBpRdYOq3PNM0wQq0Xq2jRJG1niuHiK9Zu1GAGq8
      7tuhm4rKgjNNDaCjeXkDoWiQZE7d9lDl/mUaAyjS3TtITW0DBnWem8p9zDQGoGf58nrOn22l
      KM9tdqiKyr3EtDVAMJbnu9/5C5ZXX/UCjQ73kZPgYnc7odjYbVJRRWXhmLYG2LC+Be11h7S5
      zEZyEqobVOW+YU6T4UKxKMWCVnWDqtw3zMkAGprWVf5To84JVbk/UOcCqSxq5lQDBAP9aE1O
      EpFhdS6Qyn3BnGoAWdBSyKWudoJvM++8+ZvbHudCcr+l515kTgZQzGdA1F/tBKuo3ONMKMWi
      Rhzf5mSqfytXr2Xpklo2bHqAZUvqEDQCpdL0p8OEQ6MzKjCbZ2bLVLLCoVHCoVHa287NWzxT
      xZXJpMlk0jclJxwape9SL4l4fFr5V5AkCUma+VDCUnF2p/bcTL5cK/t6Pdvbzk26d+3z09V6
      U6X3+jRcyasr8cyVa3+jK7Jv/YikXJFi7rKiChPHBa6/noqZ3pmNjPmSc6/oInDVBX2/pvE2
      6XLrh+QpgHzd9fXhs5Exl+uFlHMv6bJQcu+mNC6wLrdsALJUJD4WRxDEShzK9HOHRECjEymV
      Ks+IoogoaiiXSwA3JWO+5NyMjIVK00wyDKJEUdGp+T0PutyyAYwEhjl15ixmnYhoNpFOXF5A
      ozch5fJoNFdNzyqImNx6wtF8RRGLFTEjUabiUboZGfMl52ZkLFSaZpJhRgKdTs3vedDllvsA
      4eAIl3qHEAURQZCQpIq4yrWCJF++FkV0GijJlS0YBVGDVhBQBJlyWQZBnLMMYF7k3IyMhUrT
      bGTodQJlSaPm9zzocss1gKaUons0gKlkwGjMEM9UqiKTxoDRKE+49pggoxWIj+Ur124bmWyG
      eCYHRtOcZYzfu0U5NyNjodI0GxkNboFowqHm9zzoMg8HZRfIXq5uZEVBFK52t6+/FgThcvtM
      uXIDWVYQr+mhz1nGfMm5CRkLlqYZZGg0IpIkq/k9D7rccg0Q6O8lHE1i0WsQzWZSY6lKgN6E
      nM8jilczThAEUCSUy8MPoiigQ6YgV5S7GRnzJedmZCxUmmaSEQrHWV7vVfN7HnS55RogGYkS
      GY1WvkqyfNXdJIqUiyW02qtrKkVRRJYnehMUWR5/5WZkzJecm5GxUGmaUQYKGo1Gze950OWW
      a4CBwUFGgmHMWtDZrSRil0dD9WaUYgmBq204QRRQrunUCKKAKCtcGde8GRnzJedmZCxUmmaS
      MRJJs6LGqub3POhyyzVAPh6hu+sS6PTkUjlMxkrVpCgC+XwWk8l0+Rp0Gi2SVEQRRBAEtBo9
      ily83EMX5i4D5kfOTchYsDTNQoZVJ5PGpOb3POhyyzWAIBUpyiKlokRZEtAUKrZYEhQkWTN+
      LYkKxaKMgAwo6PUCklFHMZlHkWXQ6ecsA5gXOTcjY6HSNBsZ+UKGjF6v5vc86HLLNUAkFCUW
      jlyennLZCrk6XeVaBEFAVpQJU1pkRal0SsbfmZuM+ZJzMzIWKk0zyUAQERRZze950OWWDUBF
      5V5GndSvsqhRDUBlUaMagMqiRjUAlUWN5vXXX399/EqR2LX9XVp7RllR5+TtN98kkhNYXm3h
      nR2f0rJmJa2trRzd+yEHj54klCqRjI5iIs/Rc30s9xpp7Q3TdnQXu/cfxuiq5ejeXTStbaHt
      bCsX207y0e79nO8NsGldM36/n1q3mV2HztDg1HBxJEt/TyflVJi33v2AomhmiVPLGz/9BX7/
      eVq2bkKHwsFd2znU2sPGtas4smcnsqUGi6bA22/+msBYCX0hwlvvfsBAKIVdzPD2u9uxeuvx
      OKzjSc0nI/z6179heKzAquVLAPjkg7fZs/8w9Y3L+f07b3JxeAyLnOStdz/Af7aLTVs2IKKw
      98P3OHqmi9Url/Lh79/h3KVR1iyv5Xdv/YYMZuqrPbf7d1S5SSbUAKf2/h5NwxZeeOYRfveb
      3/D0i68QbT9IXyjCyU/3cKonRGtrKy9/688A+NIz2/D7/cSDvXyyex/xeITWrgHOd/WydetW
      qj0O+jpPsuvAKVpbW3niCy8B8KevVP62nj7NxbbPONHWzfnPjlDWWfD7/Qx0tfL4V77NpRMf
      0R8YIZCCrQ9tQQ/0ntpLSNPAyy88A1KWS8OjHNh/gPbje8ibl7BhzXIGulrxLF1PS/MKtm/f
      yYOPP0WV3TQx4TojGzZuoOv8lbWlCm2dPTzzhS9R5TCxbsNGhrvOU9W8idf+/E8R5FJl0KSU
      4GzXCFJ8gL5gnE2PP0e69xx7PtnB0oee5/jePyChcq8wwQDGxpLU1dVgNpvJlcHrsFBT5SST
      L9Py2OdpP7p7WkFffP7z7PpocriroYXMUDvFKRborPKZ2NEa5dnVDg70ZlhTf/ULjSDSUOMm
      nZ94PkFibIzaujrMZjPd/oO09oxy0n+SjU9/lQeXmvnn/zlx0fV3v/cXhHpa2b77CAC//fkb
      DIRS6E1WTAYtWqlMHkBReO65L3Lyk9/i709iMxnQayVyeTjyyQ62PfcVAMr5HAarDaPRQFnQ
      cmL3B6x79kX0xTwejwuTQc8USVW5S5lgAE++8FUOvPtTfvXOh7z4wjP86O9/SEfCTEuDi+oq
      L4+sW4ZsrlTvtbW143+NVhfe6npqq11Uexy4bEb8fj+j0QTV1dU8/7lHiKXlCe8BbNq6FRGB
      LRvXImiMaC+HOzzV7HrnZ1zKOWlp9EAujv/kaYrA5idfoOPAu/z4V+/QH5P5q9f/A3/y/CMc
      /+wzDn12lqZVq3B4qhnoaqW9s5eDe3fROzBK85rVALzyp6/R6LMx3H2WfYdOYHB6GDhzmAt9
      Q5w44SdWMuERYuzadwjJ4MSiU4iWjGxo9NB+4lP6kxr05QTBRAljboTOoSinj+xl1SNfYOcv
      /gF7/Up0t+GHU5kf1IEwoKenhxVNTTNuQNDT00NTU9Nt0Unl9qAagMqiRnWDqixqbn1foGko
      5UuUC+oBeyp3NwtmAIqsIJVUh+B8EAsHyGOkrko9nna+WTADUJkvyuw7fIIXn3uG/Qf2YbM6
      SUll+i6cZu2KZRRcq7CSQyyOIYhGwmMpQv29bHn+JdZUqweZzIRqAHc9IqJSoLvzHINDgwRG
      LtC4qg5HVRW5zBhBvYBxtJWL7T2sWrmEnGygrHMgy6pvYzYsmBeomC1SzM5uh2IVlTvFhBqg
      kC6M7wAGkAwPkcROQ5V90ovJ2CjBZB6XWUeuJKCRc2hNNhLxBFUOA9iqqfFYJ72nonI3McEA
      ZEm+3HFNsGfPeZatqKa6xjNlZzYWiVFStARSScY3nBiLMzAQRmx0IGOnvsax8ClQUbkFJjSB
      rtYABSLRAl7P5C//FZJjEYbDY3gcZrIl0Mp5tCYbFDKUFBGLt4b6atUAVO5uFq4PkC9STN+B
      PoAId2Q22p2IdzGldYHiXbiR4Ds1JXIxxbuY0rpA8d4VbtBgfxd9iSJiZhR3/Vq8Romy3kEh
      l0VLCZu7BothYeZYDvZ2MpqTWF7tQiNqyMtaSqUiS2prFiS+w4f30bx2AxaThVyhhCgqZFIJ
      nE43sWQKr91CqiDf9BG0Rw58jNNdg2vJCsRSCbNOoaf3Em6HgaG0gYfWr2Kot4OxEjR6neSK
      ZawON+mxGE63GzmXICdYKOazGEQJs8OH1aSfsx7R4CUGYmmsVhcmDVjMejQGG4noKA63l2Qq
      iU6rQScqiHobTptlznGMjfTQGcrT0rSMdDaP02pGLuc513ERo1FDbd0yqj0uPvrD+zz29BeJ
      x8fQiiIum4lsWUQoZa5bETaPSCVp1iPBXT1dpNJZPF4fpewYLpuRE+d7WbVqJYOXOgiPZajz
      VS2EmnT3dJHMZNEoZXKpGAPRLEOBAVYtW74g8Q0O9uGzGxgOxbjQM0C1U0skXeD86QuYLHCu
      dwgRBZ/35laVpfJFIsO9xEsi5VyCcCSK3WTC47GTy2bIKBaiI5dIZwsoikK+kCd0qZXhZInR
      UJjGKjtHWi/QtHI1gYFuRmNJ6qp9c9YjFgriqlnCQPtJzLXN9Ha2glxkJDDAhf4wRq1AspAj
      n0owNBpmSV3dnOMQtUbGRi7RG0ojF9Lk8jnGUml0Wg2iqCGXzeDQlxmOpAgFh8gVRHJSjqHA
      IJIM4Uj47hgHyGQziAqUhUqbzKTTkC8rxMYSaAUZi82BzTL3L8Rs4xYUhVRqDJPFjqIoJNJZ
      GutqZ375Jhga6MVod1HMpDFaHDidNoLDgwjlMlm9mXq7iVimSP1NGnwmm0EqFtDodKRzJaxm
      AwatQCyRxmKxIGqNyOV8ZY/A8S3DFWKRCFaXF5dZT6YoEYuPodcomKwO7DeT94rM4NAQtfUN
      jAQCWMx6ZNFAIZNAb3ZgMmhRgEI2hai34LLb5hxFuZhjaDRKXZWLaCqPQSyDzoyUy2C02RCp
      NHE0JgvpeAhRZ0HUAFKJVF7CbjEunAHIkjxpU1UVlbsNdT2AyqJGXQ+gsqhRDUBlUaMagMqi
      ZoIb9MTh/ez47c/YcbQTKZfgh3/9fxKRrLzxgx/wwCNb+dOvvoxjxVIutPdydu/b/GT7cVKX
      zuNcsxWbWOC//d//G/suxHhiUyN//LWvoPjWs25FHT/46/9I/YbH0BTG+M63/oR8NsLRzigP
      rl91B5OuonJdDfDw40/T1FhHXWMTn//856n22FEAj68ap9uH1aihdzDESy88S21tLVI+jqfl
      cepMgMbAV7/xLU7v/YCTZzpYvaaJ2tpaCmNB0Op454NdWBxe7GY9giAgatTKR+XOM2MpFEtp
      hmNZNAKAlhde+Dyjo6MA1K7YyOZVXkZDcQC0Fi8vPr6K411hLNqKj/lsezcPPfY4Bz98l4IE
      iHr+5b/+d3zvlecXKk0qKrNm0kjw8PAwerOdpnoP4USOpg0Ps65GR38ojtfnxaDRMjwSw2TQ
      otPpGAsFcNU1YTconDt3nm1Pfo7lSxsolRWsZiPRWIpHH3sEnZIjXZBw2K24fQ04beY7lGQV
      lauo4wAqixq1Ia6yqFENQGVRoxqAyqJm0nqAoWiQd499dEtCH9mwFsE480xQp96DpJSmDTdr
      raTLyRvKKBYkhseGpgzzWqpIFscm3Kuy+hgrxK/qYHBRFHLX6eWeEK9N5yBTTo1f15gaiBci
      N9RrJgwa4wSZ02HR2ojmw7OSWW2qI1tOT7hn1lomxGPUmEmVEgBYdXZ0goGB1KVZyXcbPRSV
      /KT7Np2DXDkz6X6xKBEvxCbcqzL7kMWJv7nXUEN3rPOGcVs0NmK56JRhVVbfpN8ZYJmjiXgp
      NOU7Tr2HvJSdbADD0RF+sPOnN1RmJgTH1xGcM/+4y22rKcq5acO9xmpGclMX7iukk0VO9B+b
      MmyNbx2D6Yk/7rqaDfQle8avl9mbSAsTf6SltiZG88Pj13XmRkK5q9ebPY/Sk7xwQ71mwqF3
      MXqNzOmoNtXTOXZ+VjI3uR8kkh+dcM9j9BHKBcavnQYPwezguGyz6OBQcM+s5K90NpORJxe0
      WtMSYoXJRppOF7mUuDjhXkvVesra7IR7zbZNfDr48Q3jrtLV0RPvmjKspXo9Q5m+Sfef4Xl6
      c21TvrPMuop4MaI2gVQWN9MagM3dwNOrNmPSTPeECsDFo22kChVPciaZneHpyUT6gwz3V2qg
      cjZLYfoWocoCMO2aYJ3BiA7YsHQNOQksFjd6JGxGPWO5MlqlyKoVD/DZmZ2cCQSmE7PgeExe
      VnnWTB1m9k5qAs0vCoGBIGn09B7tZOUz65HDI8SKJj730uZZSRjsDFJET/+xszi8biSHhS7/
      EH/0F08voN4qV5jWAHKpMXJWK5FMlhq7nY6BdtCaWO1xIhhcjMSCJLtOMZKaua1/K9j1rhuG
      y1oFrWPqtceibmG3L1CKWdZ94SnIJzAoK7H7nCgmsGKYtYylG1cACpmoFY1Wh2LQs2bzkoVT
      WmUC0xtAOsLh7oqno3e8XzXGsbHg1YdGb+3LXywVGY5O3UsHwGYgpbtBOODQTb8Dsklnobmq
      ZcI9t8mDy+SmJFe8VE6Dm6JQWX+rE3QU5SJOgwu9xoBO1FGSi9h0Dsway/g7dl1lxwZBb8Hj
      AfDhqb+ycPzGBns97hrn5b9X36tftjAbACxGGizLJt3TiQZsOjs6Ub8w26KUcgqSNPPXN2nL
      cnEG95fdPfuv6SQ9lALh0kQjDccDPLnk2XFvSVqJw+XJIDaDnVR+jNFcpS3vMfiIFuMki3F8
      xlqSxYr7tCBd8VzJnNvfhsHtwm4sg8VN78kLLN28mvql87eX/ybPg7N6zqHzwDUnnRk0RnJS
      BqehssOEWWMlVUri0FeurVoH8n1+pGWiGJ90r9pUTzA7ACzQvkDRTITRRM+Mz2nEe7yHXU5h
      9jVAOUl/5wiYM/iWVc9r4QcmuTanQ0AkWrhaY9p0doaz/ePXXkMNvamrrkRJllhqbqZKN7st
      SVw6L3Zx6t0bVtrXES9GrrvnxW2/ur9RjbmOaGEUsFBtqidRrHT+9aJxVvEvBJMMYGlNLf/x
      u9+7JaE5Kcno0MwGMBuqTfU3DNcrZpzi1E0GozD1dh4O/dQFVCvM8XugdUCuk7yiZ+WDa0BR
      EISZzpqs4NZXIczCC+3Se0iXbjwYeCtEsxG6oh2zetag1aPoClOGCYI4YbzhCsOZqwao02jG
      xyD0on7csO2aO3fyzaRfXKcXcPlurWIoR2dXCGbDscGjNwx3i9W0Bc5OGfZQ4zYabSsm3R/N
      DU/5Y9WZl85Zv6YHmuf8DkC8GJ1SB5X5pdY02aHg0LvHP3Z3dGtEm8HOQ85Hpg33WWo5Mjq7
      6n8qBEFBMwdPkEVrQRSqgUomjRWirLZvIFGqtCNXOlqIF6KYtOq5B9fj0k92Rkx173Yz1Qi1
      KFxtKi6IAXjMVTRXrZ3xuWp7DaJp+pMkrQbTfKo1I5lymtjljFEUCOdHAMYzS1FkwvkgPtPC
      7Bp3qziucxmbtBbKSvmacDcF6WoTxmusJp+fn5M8L0TbGUj1Trg3Ve07FRa9lY21m6YN9xh8
      BDPDeJwPTwrb6N1CsjjGetYBYNCaGCtU5gwtsy3jbGyyAehEPVWGyt6vC2IAVU43omnmBe8e
      g3tCp+124dC7kJTJP7xOnP0msB5D9S3pMFX801FjbJjVc+FckFD+qpvaZ6wdnxxXZawhlB2m
      ylRNJD+Kz1iDwNyaqgbRiMc89abBw6mRKe8vs628Rp8a9KIBnaDHrLVg1ljHXcvX9hWuR1bk
      aQc0l9mXTyhDZsk6ngc+Ux1uw+T+oVbUjTc/74rdoW/EWs+6G4ZXW+uo9039o9SY6slJ6Un3
      Y4XwlJPsGi1Ns9ZrJDc462enoso4+1pkth8Js3Zh9k+9QkkpzfmDlZWuduBzkp18OYfFYCOQ
      HcBrrCFRjOM2zH3z3dkSvuaDcAWdqMdzOc5JBqC9JvBm0Yrzt5V5WZx+tihAshSb9uth0Bim
      nG1qmqagmLVWNELFNVvxFCk49R4EQbx8z4mCglk7941cr8eln93uzy69h2B57nOMZq2H0c0K
      5+y2p3EZ3aSVqack11nq0YgTvVrVploipZlnvN4JrqwDnmQAgXiAf9r3T7ck/F9u/Tqamx+/
      WnCqTfUYpvA9K4oyPs8/XojgNVZzMdUOgM9YR6qUIJQLTPh6BzqGqGpuQCdUJsNZ7LNb7B8v
      RmbpBZr9km2XoWrcWKEy512nqTTrHHo3AiJ2fcUvb9e7EBCQkLHaZvfB0us1MLUXlHgpQrgw
      MT167US5OlGH11iNXe9CK+rQiXr0Zv2cmp5zxWOc3FTViXoCl8dHFqQJJJUEyrM4GqAkQlmZ
      /kFpgY4iSZcSjBUnf8m8xrnXXPlMgqFODb3+PlZtW06g7SLRgpFtz66eD1XnRLqUGO8AQmVc
      44oXREAkXoggIDBWiCAiIqOMG8RCce3HwiAaCWYHxvsew9k+3AYvGkFDo3X6DrPbUEVZmt1Z
      E9cTyU/um+jN+vGxoAUxgDP95zkzNPVChGt5as02zN4bdwYdMzQVrFonPuPUzSSHzk1RuXET
      6lqMGtOEQTKL1g5MX4UrxQzRqIJdzGO3CWQLoNHqsenn9zQbm+7uOGxQK+qmba/HC5OnHAAT
      VmrpxambBSWlSLQ4dScaKjXzdCvGNng3I1/+UF6pSa4MRroMHtY6J8/KtWitZC+vYLvrO8ED
      md4bhnt0NRNWeF2LKIgkypPdYJs9j2LVTV7al5dykzpNPmNlmoBVZ0Mn6pFlGauucnqmoLfw
      0BfXVx7ccuVEmfk/Wik4yw53i3PLhGuH3j1eGBx6F+LlkedltsrgncDcatmClB9vOlzPVu8T
      1JgnTqlw6F0TVs7pRD1ugw+73kWunKHRsgKtqL+lPmOsEBkfUfYafeOuawCDxsSp6M4bvn/X
      G8BCEMmPTOkFanZsnFBlO/UehjIV91uiGMNj8JEoxq6ZDHd3kSwl+P/bO7flBkEgDP8gLAZj
      E2fa93+1Tq/bOM3Rc3rhiBowkzZedEa+a4WVYVf8Wdbd4KwyY7e5Vr3sKTm1DtDYgeAvfBcp
      vhw5S29hHxAisTbJaVXTnvy5VGfENM8bTos1XsPfBaBFOsAU5/JgyXyJ6pdgMW2ca8r/TPdN
      EPS/MwdD6wBaRMgcMuGc7AbjycCQ5p+IRIwretl2LtUwrzOTsfsoVmW4U3HCR/r+lCGh0Djm
      dpWAW7b6BVxOqxwqCJHX9yOU5ISsckfkUGjUV7s6hQpWKGpbzlBBaDZm2rbVqGqF5ISyKaFF
      hMOTCWrECUUzIamMrlMjm+7R2j+0V5pIKziZdiQns2t8LPcPVafo7nONGwCshB713fU/todQ
      NYWxpVuzCyawL+3D9h2CSZxK93zaqsQ8FwU06m9DiTMVYogvjehZNL4qhGfReAfwLBrvAJ5F
      8wMuRV7kfWGSVgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='TOTAL DEATHS' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAfJElEQVR4nO3d55Mc553Y8W+Hme7JaXPAJuTAAFIUdeLp7mRZZdfZZbvKf4L/MpffXdnW
      C9vlK/vkKvlOJAECItIGbJydnZ2cU09HvwBkkdSAAMgFFjP9fKq2anen+5lnwq+f1M/zSJ7n
      eQiCT8nnnQFBOE8iAARfU887A+8is1vGc8zzzobwFogAGMG1B7jW4LyzIbwFogok+JoIAMHX
      RAAIviYCQPA1EQCCr4kAEHxN+uatEPawg+dY55mfd4Ln2oC4Q8QPvjUOYBtNXLN3Xnl5Z2hG
      EEXRIJmCcPi8syO8QaIKNMrdu/D0KRQK550T4Q17pwOgkz/if98/wANOdp9yZyuH87xm4rku
      +4cn33u+3W9T6fzplgaz26c1GL78iSMRSKVBFQPlk+6d/oRzbZuNuESr3+fx7inptXX2trco
      1wcsX7lM4fiI/GmVW7evkd/dpWPr3FyfYnP/CNvTubWWwJCDPHn0hK4XIuF22W8a3L51ldPD
      I4imWUnJ7B9VkCJJPr658m5fEYQz984GgGf1ODo6RQ3ILOlTXL28xvxGhr2dIB9cTFK0LKYW
      lliOqhR7Bt2+SbNapTKTYn5tjWC7QX8woBdMIUsS9mBIZmWJ6KpKjCED06F6lCcVW+Lq9atU
      iiUc3vEiUThz7+znPegavP/pR/zqr24TcEy0kI4shXD6Rb56ksVGIhoJo2oaIVVBkWWSmRRa
      MEBYC6CFQgSCOmFVQpYlJAm0sEJ2e5+G4SHLMtOZJLqmEQwohMM60nm/aOGt+1Y3qNHKveO9
      QC67mztUhwq3rq8T1d5MAabd30OZW3rWC7Sy8kaeQ3g3jFkAvB3aaRdF1mB+Hqamzjs7whv0
      zrYBztW16xAU/f9+8M62Ac7Vf/nPMHyF7lJh7E1MAHRqFR7s5gE4yObptGq0es73n9NsY496
      IBoFSTSJ/WBCqkAelWYHZ+BgedDudElqNk8OT5m9sMRyHB5tnzC/vo5udzg+qTC7toHSH6Dq
      Cg82D4jPLnFxMSV6gnxmIkoAzx5yWmqhmi0Oa8+rLpLCxpXLOJUSDcPAdmyePD2mXG1x4/oq
      7WaXZqPFcDjEsh32to8Q0+D9ZyJKgH63TSiWJJUMUK2Wn13FXYedrW0CeohQu4MtKaiSREDX
      0QMKqizhAL1el6ENmirjnvPrEN6+iegGfdHidp7nIT2vy3/zd4lv3+zseR5IEpIkIQHal1so
      v/5bCAbfbMaFczcRJYD0ggbrN///3WOkFxwHPLsFWjSCfWEi2gBn7rO/hEDgvHMhvAUTUQKc
      uX/4BwjFIKDCzz8779wIb9BElQDdeoV8o4/neVSqjZce77ru6ImPEjA3K+YD+MBEBcBxoU69
      UsED8sUKrm1yelqi1h5gmwb5QgXDchj0+9QabYq5EoZtUiiUqHeM886+cA4m5xJn97DVKBEG
      9MxnHZrZwyy2qnFUKRAZlnlaaDO7dh29X2DqwgZGq0N8KsyDh5sYSoq//dUHiJq/v0xMANSL
      FYrlGopt4SVmALAdj1A0CC0L1BCf/GSDUChEo+6wtpBmu1al1miyevEy9WING0QA+MzEBEAo
      Pcsv51dQPIuuBbORRYx6iX+8t8n06mWub8xxdFonFo+zND+DBCyvLqLrCsf5KhevriF6/f1n
      IgbCXsS2TPqGRSgcIqC8enNH+90DlMwsmCb8+tdvMIfCeZvoAPihtMQFFDEfwBcmqhfozOzt
      gvP9t1ILk2EiAqDX7WA6o+8HMofm69/k1miA2DzTFyYgAFw2n2yRr3RGPnqaKyBWOxVeZOx7
      gexOhfDMGt12GyPU5Xf3S1iqwl/fmufekxP6JqghOMjWCUYSJEMO7Y5FKqpTbndZWZple2sX
      OTrLX31yCeW8X5DwVo19CZA9KlE4PSGbK2A4EpdvXOfSfJJBr8fGjZtszCVodQxufXCTmGRi
      OAq3P7xOVFO5dus6GhaZqWmsdltMiPGhMS8BPKIzC/zyZoZuvYkXgERQwVbiJCIBHm1uo4RT
      XFqeYnNrm9TCMjNBUGWIJhIEAjJSPIZ92uLC6vy4vxnCDyC6QUfQHh+jfPY34pZoHxj7KtAb
      cesWKKI14AciAEYRPaC+IQJglPv3xUCYT0xUALi2ye/+75c0B6/25X26uc/I9d9C+pnmS3h3
      TVTHx6BdIZWZo9rqIrU7PDpuokcTXJwKsHlQRE/NsBxxeHpSZ35lFcdxsPodHm4eoiVnuHVx
      TiyM5TMTVQIcPj2h1Cyzu1/EsW02rl4jqjrUGn0+/PAa2Ab5WpdPP75Gp1zDBQb9HqbtcHKY
      H10aCBNtggLAITi1wK/+4idcnNGQtGcLYIVDOqGgx917mzT7NjNxjc/vPkFLJQmHdGRJQpJk
      UsmouPr7kC/GAWqFE7ZzdZbX1rgwHXvp8dpWHuVnvxDjAD7giwB4XVpliHL5hlgVwgcmqAp0
      hi5eEl9+nxABMMr+nhgH8ImzCwDPY3d7l8p31tdxLZOB5eDaJu3e2fSz1MoVDAfMbofff3GP
      f/rqCY3+qK0uBpwWuy9Mp1GsMBj1gFgU1zfOrJx3XRvDNKjUOiQ1j8ODHB1XJ+U2eVwx+fjG
      Op4cIOD0ePj0lPkLy+gKTKU06g2HQatIoQvv3VhHk1z2dp7SJsp7a9McHR/TtjTev7rA7tYe
      heaQn346jWe5LG6soQ87tLt9yod5BmqMm+tpiqU2dsAht12h2MxwY2OKXhcCjoGajnHydJ/j
      ky63k2E2Nw9IzC2zsZAUPUE+c2YlwKCep+nGKBeKGIM+rpZkRraJLSzw3vvXmNZdmj2T/eMK
      H3xwgdppk3yxjucOKBQ7DAyLVr3EcbGL57oMhjblvX3yrQG2Hmcx5LCTLZBYWOHSQvL5szrs
      7+xyXBsSUl0GpsNJ7ph6vc5+0WRpOkZqdpFl3eG4XqdY6dEsVCjUyijxea6tZLBME9tx2N06
      FPMBfOjMAuC42Gc+o5FQHKqmRDSiEVQVZBUOd/ap9p5NTFQ9kwdPDhm44PQa3Huwj+Fa1NoD
      ImEdz3FxHZNWZ0g0HMB2ZKIRnYCqoAcUDvb2yZbbz59VQlEUHMOg121T7zuE9CB4HgsLM6iy
      RK14wnahTVzTKeWP2Dwqo6oq+ewR+6dNut0Otqegiw0yfOnMukEd10WRZTzXxeXZzuw835TC
      tm1kRUFC4uRgl/1Ck8WNq2zMhHE8UJTn53mgKgqSBLZt88cvOBJIzzexsCwbSZZRFQXwsCwL
      kAkElGfnSDKqLOEhIctgmTbIMqoi//80VfX5scioqoRlOciyjKIqzzbIaIOyekncEu0DYhxg
      BK0ro1zYEAHgA6IbdJTFJfHl9wkx2jPK//p70KIvPy6Vho8+evP5Ed6YsQsAz3U4PimzuDyP
      +qb6LB3n2QYZL9MXewqMu7ELgGGvyfFpjUg6QzIIvcEQPRKi22zjBXTS0SC1eotIPInkGHR6
      Q6LRMI83d1lbW2XQ7TC7OMOg3cVCJRPTqDbaaOEoiYh23i9PeMvGLgAqhQaXL85SaXQZDkrk
      rBDLUYmyAc3mKRspiS+2ikRnFlkKDglEo5RbfUzTwjBtKq0uqViAp0c1ZNMhcHOR+/cfYgbS
      /Mtfvi/2B/CZ8WoEew7HxTK7+3mOc0UULczVSyuorkM8GSegSNiOxM33b/D+xhyRRJKNlXl0
      XSOdiBKP6s9GeiWFpaVFljJRKo02qxcvkQ7CqJsphMk2ZiWAx60PbxOP6bTaXTRVRlEl1ESE
      O188IJCeZWVjjYNsAeQoc/PTqAGN+YyCFFMp1LusrSwQCgUJuDKEp0kFZLLHJTaurIoNMnxo
      IsYBHMuk1R2ghyOEtR8f09rff44yNffyA4Ma/PKXP/r5hPMzEQFw1sQGGf4xXm2At+XJY8jl
      zjsXwlsw9gHgWCY944x3AKhVod1++XHC2Bv7AMjnTni4e/yDzq2XaqNvgZakZz/CxBuzXqDv
      8Bw6Q4mZgEPb8jj4+h5uZBbPqNDtOXhKAE8O8v7FNF8/PkJPzxGjTbtnEpldIWy0CUZUfn9v
      Ezk2w89vb4gNMnxmrAPA7LY4OjlFV2EYnSUYS3P96jJP91yur6eo2g5Os02hVEaNJIjrKrKS
      4OfXp3l60sNxHFqdDtF4gmq1gQmEzvtFCW/VWAeA5cn8/Gc/Ia55FJsGAT0FQDIZR9WCRAMu
      HnFmQkl6W1kkNUA6HgFJJRkP4QU9orEg+dMmyytigww/Et2gI2h3tlEWV+GDD847K8IbJi56
      o3z4IUSSLz9OGHsiAEaJxSAaP+9cCG/B2HeDvhHZLLhiirwfTGQAeJ7H/a/ucVrvj3y8225S
      qr94wSyCYl6AX0xmFcjpo2pxGo026bDN3k6B0HQCTYoQsrqYMZW9rX2ysRQ3N6Z5sn1IKDnL
      jY1ZsTCWz0xkCVDLHrJf6fD0IIdhGiihNEvpAO3OkH6zgykprF26yGrMJlfrY1oOObFBhi9N
      ZgC4Uf7NL2/zs0uz9FyFTCqKoujUS0dsF5oEFcju7bNXh0zIA0kmFguJq78PiXGAEbSGi7Jx
      RSyN4gMTWQL8aOGQuBnOJ0QAjDIzC7J4a/xAfMqj/N3fwVA0if1gbAPAszp89TD7whWdPcfG
      MEev8+AYPU4qbfqdHiP3gdE1UQXyibEdB6idVJCDHk3Dxe23mUpHqNWGWP0auZbHQmjIvaMG
      H966SYgubSuA163S8iLcWorQ7FoohksyCNtbhyTmllmfS5z3yxLesjEtATwOah0Sskup3CCX
      LwNDcid18qUGekAlNT3H9euXmQlL7OaqLEzH6BtDiju7lJ7PoGw225imxdC02H5yIMYBfGg8
      SwBniK5H8BQFHJdkPMKwb6PHQlyYu0KjUGIgq2gqyKrKxfULBCSH5PQS07EoshIgEZGRlBjG
      0OLa9WuU8yUxDuBDYhxgBO2391D+7b8HTdwTNOnGtAr0hr13S+wT7BMiAEZZXRW3Q/uECIBR
      fvMb+M1/Pe9cCG/BBAWAzd1/uk/7RUs8uy6tzrfnBzQq9dHrAk1lYH7+rDMovIMmpqJr1KuE
      5tIUTpsYAYvkfIZaoYEmD9k+bnBhPs6dh4fcuHWTqNSnOfBIhoLogy5fbR4QnV7gyoUp0RPk
      MxNTAmTzZTrNHrlCgXq1gY1Ltdqk3xsgKRLBaJqb1y9yZSlFqdJgdWWBdqPFwDCwbJfD3WOx
      UbYPTUYAuBaWHOHqpRUWYwpqQOLOnceUuyZqUMXodugYDq3SKTv5BolUikhQQVEUTHOI5UJI
      C+C9/JmECSPGAUbQvt5HCcXhs78876wIb9jEtAHOVCQGknhr/EB8yqN8/DGIDTJ8YTLaAGft
      v/83MEWT2A/GKgAqJ1kK7Zd9MR0qtT/f3MLzPIamhTk0XziH4BsH/9AsCmNmfKpArkW1Y2D2
      qmQCCQ6PSwRiSRbiCtlShwsX5rEHPVo9g2qxSr2VZHVljkYhT8fVWJ1PUa42UDyYmkmQOy6g
      J6ZIR2QqpRpSOMHSTFyMA/jM2ASA0etiKxGcXgsvME1Uk2hbNve/2qTSt+i4HmapwqVbl5CU
      AImAzcFpE6tUYifXJfzXH9Hs9NAUhSk7RD53Snmvwk+uTWNLYXrlCvMz8fF5Q4QzMTafd6Nc
      ot7yCFod9o8rVCs9NtaTGLEEN1ZTxJMxmpLKdEIn79g0Oy6BVICmFWJ9TsX6xs1tvU6LSGae
      6VYbRw0yl0hSsgwxDuBDYxMA6cU1/nJdA8+m1x2QDAcIBILcuLFBrTUgGgqTWA4DKutr8wwc
      ialUnClNwyZAPB5mqLjc2Trh4to1lmkRXJ0jpKsEFJXF5bnxeTOEM+OrgbA/vlTpJRPetd99
      jfKv/p2YEOMDvgqAVyU2yvaPseoGfWv2dsEZuWCKMGHGNABcCrkTdvZzdIxvTADwXHp948cn
      3++LsQCfGNMAcKg2DVJRhf3jCq7jYFo2rutwUqhiWTau52HbNpbt4H3jd8uycVwPx7ExLftb
      j4mvvP+MbcdHq16l2dOYu7BG/mCXO5s5Ln/4Ef1Kifv1Aom5y3Ry2xzXDX7xyRXu75ZRhn2i
      qSihaJpgr8TjkyY//egmjx5sM7u6zu2ri2IgzGfGtASAmcUL/MXtS3SbbZqGy/tX52m3B6Rm
      5vjk40t4zQ5KPMPatE6nb7N26RLX1ue5cesGYbfLQI5w9UKadt/jxtVV3F6boZgH7ztjGgAK
      3rDJFw+yLC7NMJ+J0bF11ucTTGcSQIi5pTRRxUZPz5NJJ5mOBkikU2gyTM3OMR1RcLQEi+kw
      vU6HaCaDJi7/viO6QUfQtgson34GgcB5Z0V4w8a0BHjDPvxALIzlEyIARqnWxMJYPjERAeC6
      Lo7j4H6n797zvB/Wnf/4kRgI84mJCICv793nzv0nfPno6Fv/Pzg8xvmeACiUa6MfCAbFBhk+
      MREVXUmSUVUFPRKiXS3yaL/EzNIFhq06n39ZZ3p5BblTouPozMRksoUWa1cu0uv0UJwB+9kq
      hBP89L21ybgiCK9sIj7vUDzFravr2IMe7WYbx3U4zBXQ4yk+vX0FybUZeiofXF+l227jDDsc
      l9r0BgamJ3Hz5nVmwsro7ZKEiTYZJYDZ46sHT4llZgnqQ9Sgw1w8RjSiIcsK0ZAGgSSKDLoW
      RI/EScU1VCtCSA8RUGUikdBkXA2E1yLGAUbQ7u2i/LN/IcYBfEBc9EZZWxP7BPuE+JRHWVsH
      RTnvXAhvwUS0Ac7cf/qPkJr509+dDvzqn8PCwvnlSXgj3vEA8Nh6+JjawCGameWDiy/btMLl
      YL/AysYi371+5/Illhdn/+yMSrVKNJokpH/jrZiZhbVLf/q72RTtgQn1jgcAeIEwN5bTZIst
      uo0Kj/eKLF/cQO7XOSnUmV3dIGI1eXpSZXl9g37fYNht8GAzx/zKKjMhm0c7J9hqmGRIZvOg
      zKVrG9RzWdpemKmYS/awgD41y421GTEfwGfe+TaANeiRLzVQAwH6/QGObbK9f0q9PeC9G2v0
      Oj1O630+uTxLpfNs2cRBb4DjOTzdPeEoX+P9D28yFVV4/GSPoTXk6LhEq2ei4OF4EisXNwia
      fV60u5Iwud75APAcm2arQ7Nr0O/1cCWVgCoR1HS0gIyqKLhGmzuPDrBcD1mW6PX6eJJCUJXR
      ZZs795/QGLhkklE8SSEZjxBUoVKuYckBwppKIKCKq78PTcQ4wP72FoXmkI3r15iP//i1fLQv
      t1C+2wa4fAWmp3902sK75Z1vA7yKjavX2DjLBCNR6H7jQmDZolt0Qk1EAJy5n/9cbJDhE+98
      G+BcZI/EfACfGMsAOD064B+/fMBuvjFyLZ9qvfXCcz3Pplbvfv8TSGP5tgg/wFhWgWxb4eOf
      3GTr0R7DjMbJaY3MzAxB2aHX61Outui2OySnZwi6A/KVDgtL8yhWn5NSmYEdRVcsii2T5cUp
      6sUSdiDC4kxC9AT5zFgGQK9d54u7TeKJNHa/w87TPeRin8WwQWRqCRkXPaSxf5BjMSmztbVP
      qQtJuUd6Js6wZrB11GI2pbO7f8RxtsL6lUt4npgI5jdjWdYHtRDLS7MwGJCrtrh8dYOYCoFo
      ko2lDAFZwjRNkGQqjT63bq2j2BaO62KZJo4HkudimjayGuLKxhyF4xOGYm1E3xnLcYBuq0mt
      bRBLJokHPYr1LtFoDC0gEdI1hv0u5UafzFQa2R5Q65nEI1FUz6TWHZJKJJCdAbWuxex0kka1
      hqRFmEpGkACtxbNxANH1OfHGMgDeNK1uo1y8JgLAB8ayCvTGifkAviECYJT79+Dw8LxzIbwF
      ExEAjmVwdHhC9rT+7XWA7CHd4Q8Y0Or1YDA4s/wJ766JCIC+0abbB6dT5KRpPV8RzsPrVtkt
      D/7098t+zvuFCG/dWI4D/BnPpXBaQI8Gublg8Nvffk3LVvmb95YAl80//IGtfJOffvoBR0+z
      JKdT2I7K5aUgp4UhuweHTF1Y5+PrS2IgzGcmogRAVrlx8zo31xOc5mq44SQ3Ly8TkFywLYZq
      mEuLcRptg8z8MrfWZ/A8D6M3wFY0rl5agUEXU6yH6zsTEQCaGiSX3WW35LBxeZmNjEazM0SJ
      pljIREmHFQinWUjHmMtEQdHJBA2O6jbTqRCDfo9IOkVQXP59R4wDjKB9sYmyuAq3b593VoQ3
      bDLaAGfts89Aj513LoS3QATAKPU6yD+iJHQdWL7wbJl14Z0mAmCULz6HhQs//Px6HZIpyGTO
      Lk/CGzH2AXCws02+bmDLAX720XV09VlLNn/wlODcZaafz2x0HZNqw2BmKv7yRMPhH/fldT2x
      tuiYGPsAQJKJhHU8JYjTa3FnL4eenCaDB47B3bs7tCyJT95boz+w2DvIsTqfJNe06RSzNPou
      oVAAgnE+vrkyGd1iwisb/wAIaGzMZsgXi+T2DqkZEO30yMTAqNdIrV8h2chjWza9wRBr2Me1
      wnQHNsFokg9mQnTjUYxiDYcJ6RcWXtnYf94h2eXR1h7NgcfC+hIRCSIhHS0cIZZOUHy6xfZx
      FWSVSFgjqjp8tXWMEggQjYQJ6BqhgEI4oo//myG8trEvAeZX1phf+dPfv/iLbyxeZQ3QgypL
      6WnisSjphARkuPidNMIAC/qf/uF5P25VCFesKDEuxEDYCFquhaKGfngCwyHcuPGsMS2808a+
      BHgjbt4SC2P5hKj2jrKzLRbG8omJLAHK2UO2i21UPcpPb62jyM/GBirFU4KJaRzDIJ36nlsd
      dP3FjwkTZSIDYGjC9ZsXOTk8xTINnuwcEJlZImgMIOpg9Ie0KgVydYMb1y9SzmWRYtNcXp5C
      FneE+spEVoE8x2T/II+DQuloj1zLZPfw5PmjDvV6n+WVZRZmMwzrBbKVLvnjHANR6/GdiQwA
      CZd+f0Cj2UWPJQjikknGkP4438uzufPFfY5LDVxVJ6hIxJOJySwOhe8lukFH0JouyvoVsTSK
      D0xkCfCjqaIs8AsRAKMsLomrv0+IABhlcxNssWekH3yrrJckeWI2h9j8+iGNoYuWmOLjq0sj
      jymWa8zN/Pl9/04yietYE3xPjwRntgrSWab19n2rESw8Y3RruIPKj09IDgIeuNYZpKWB54B3
      BiWTGgX7JbvkvO205OfTR13zDNJ69fdqMi73gvADiRJgBKOZxbXE2qB+IEoAwddEALzAoN3g
      y6+eUO0OKRxlKXWGeK7Fwyf7WPaL11AcdJrc/eohB4UWxWyWYtvAc20ebu5jfs95o3lU81my
      1T75gyMqPRPPtfj68T6O++oFt+d5lPM5Pr+3Q9cw2Nw5wvE8OvUiO8f118uR67C7tc3dx4cY
      gz6buzlcz6NVOWU3/+LdOb+dhkvpNEe23AXP5XB3l693TnBcgwePsrge9OtlNo9rr5SfYv6Y
      XKWP59jsbu9w9/EhQ7vPw8fHuB50qwV28o2R54sAeIH94zK3bq6RyxYw+11ypQZGt8NhsYr9
      PV8+y5F47/1rtGoVzF6PXLmB0etwVKhi269X27SHfYqFMtWuhTXocFxsMmi1OCzWcF8jAHAH
      HJUtPnn/IqrjUq2W6Rg2pdMClbbxenkyW3S9BKuhIcd1h3KlRN9yKBYKVFuvlpbnuajhAEbb
      ZNiq0QummNYtyq0OrXKNat8hmyvR7b+8ce25LoFogH5riGtbZJZWmI9JNHsdasUaTcMhe1yk
      0++PPF8EwAvIwSAhPURAcZCDUWS7T6PeIpNJfe950WiI7NEJFy4sIQUjqM6ARq1Jeir92nk4
      Pj5lbnEWz3WRtDiy1aXR6pDJJF8vIbNDtdbk91/+gULLYn4qSrHcwlI0Iurr3f4qq2GsdoHN
      woC4BkvTEXKFJl4whP6KY4eyopJJRpEA0/BIJnWi4Qi2bZLKpGnXS9hyCP0VsiarATKJZ3u7
      KUEdp9PAUCJkohqZdJJmo4KjhNFekJYIgBcIOEN29o6wpGdTI5fjCpt1j3To+z/lw51dTEVj
      YAwBWIqrbNZdpkKv/1Y7ts3BYZ5cvowLLEYldpoSqVf5ZnyTnmI+E2JxOkJvYBOIZxgU9wgl
      Z147T+6gjaMnWUjIVDs2wcQ03fwu0eT0y0/+YxqOTeG0TKlaxQ5InB4WODitEA6F0CJR2sd5
      InNTr5aWbXF6WqFUrdGoFtg+7RDwPEzHJRSPU9vPEl948esUvUAjGM0s1qBFqdomM5VGsi3U
      oEy37xJQPbSghvyCiQOdVpNmd4iihZiKaqhBhW7fIahCMBh84Xkv5Fj0bRnFswkEZXoDF1X2
      0HUN6VU3NfY8Br0u9b7DbCaG47o4hkkwomOaLmE98MrZ8TyPVr3OwFWZSUdxXA/LGKJFNEzT
      e6W0XMemXK5huRLJdAqGXQyCTCV1hoaH45houoZp2YR17fvTsi1KlTq2KxGPR+h2uriezNRM
      AslVsC2DUEjHtBxC+p8vVSkCYATRDeofogok+JoIAMHXRAAIviYCQPA1MfVJmFitYpb/+bt7
      2MEUv/jFT1lOP1vszBn26DgaybAqAkCYXIm5FT5Z3aE0+ylLcYk7n98hurCO+fT/8D9OU/yH
      f/2RqAIJ/rB19y5eZpmDP/yeUHqWS9euEZeHogQQ/CEWj7C5v4dlB0hm0pQ+3+VIlsRA2Chi
      IGxy2KaBI2sEZZdWq42iRYiGVJqNNuFoWATAKCIA/EO0AQRf+3/A4H+EogLWvgAAAABJRU5E
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='TOTAL DEATHS PER MILLION' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TOTAL DEATHS PER MILLION BY DAYS' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TreeMap' width='192'>
      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
      5P8HxRjVLR0Kl9gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Worldwise COVID-19 cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Worldwise COVID-19 death' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='countries wise GDP Per capita/ total cases' width='192'>
      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
      vYHDtEx6nRatrkYgkiT+mumPbZln8AYZmo5t22S27tMkzOajm4hGl3RHZio1uIXHi8jvPaSq
      B9h+8i2CqbLfEhy38HgR5fQTCqqX3fU7iGaPvYbBtMMWHi+illvnoCVxsHUXweyzW9WYGR1c
      TP4imsVNdmo2mZ37YBnslDvMjg0uJn8Rnco260WDwv4jLNNkp9hkdvz10hetvsvDbI9q9gk9
      3WQnX2Vuwnmv09PQW/t8t9dFKW7Q6Zns5IrMT46//IXPYXUy3NpS0KpbNFSLnXSOhenBeUkv
      4sG3N85uCiQINlq/zyef/YSp0SHeoJZEBLR+n48//TEzY8O8zkKvZ+XgsBzXPvkRM+MjzvcP
      eKkDev0eVz/+ktmJMef7GLySo8+Vj64zNzX+RukLCPT6PS5d+4KFmYk3+jyeOlYu/4CV2ak3
      SoFAoN/XWLz4KRcWpt/4XPp9jbmVT7iy5DSF/eWIgnl2UyDL0NjaXKNriiDIrKysEnzNFMgy
      euxsrdE2BGwkVlYuDN5B5mUOs8/u1hqKDrYtsrxyYWAN7Msd+rP1zbYtsLR80WEX6hdjmzr7
      O+s0eha2BYsrF4m+Zi+SbRkc7KxRUy1s22Zh+RLx11xmaFsm6d01ql0T27KYX75EwmG/nRc6
      bIvs3hrlto5tWYdbmzgMcr3Mkdtfp6T0sU2T2aXLpMKvl0aZvfbZDYCn2LYNgnDqZKdXwXU4
      OHC+2eB5c5zZbtCnvM2H4zpcx8s4s20AF5f3wf8PvNes31T67X8AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
